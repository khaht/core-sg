482af0c468368094394847ac6a2a7870
const {
  join
} = require('path');

const loadPolicies = require('../policies.load');

const {
  getConfigDir,
  removeDir,
  createFile
} = require('../../../tests/helper');

const isAuthenticatedContent = `
module.exports = (req, res, next) => {
  if (!req.meta.isAuthenticated) {
    return res.forbidden();
  }
  return next();
};
`;
const testConfigDir = getConfigDir('test-policies'); // const configDir = getConfigDir();

describe('Load policies', () => {
  const policyAuthPath = join(testConfigDir, 'isAuthenticated.js');
  beforeAll(() => {
    createFile(policyAuthPath, isAuthenticatedContent);
  });
  afterAll(() => {
    removeDir(testConfigDir);
  });
  test('Should load policies', () => {
    const resp = loadPolicies(testConfigDir);
    expect(resp.isauthenticated).toBeInstanceOf(Function);
  });
  test('Should throw error if policy file is not a function', () => {
    createFile(join(testConfigDir, 'invalid.js'), 'module.exports = {}');
    expect(() => loadPolicies(testConfigDir)).toThrowError();
  });
  test("should return empty object if policy directory doesn't exist", () => {
    const resp = loadPolicies(testConfigDir + 'not-exist-dir');
    expect(resp).toEqual({});
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvbGljaWVzLmxvYWQudGVzdC5qcyJdLCJuYW1lcyI6WyJqb2luIiwicmVxdWlyZSIsImxvYWRQb2xpY2llcyIsImdldENvbmZpZ0RpciIsInJlbW92ZURpciIsImNyZWF0ZUZpbGUiLCJpc0F1dGhlbnRpY2F0ZWRDb250ZW50IiwidGVzdENvbmZpZ0RpciIsImRlc2NyaWJlIiwicG9saWN5QXV0aFBhdGgiLCJiZWZvcmVBbGwiLCJhZnRlckFsbCIsInRlc3QiLCJyZXNwIiwiZXhwZWN0IiwiaXNhdXRoZW50aWNhdGVkIiwidG9CZUluc3RhbmNlT2YiLCJGdW5jdGlvbiIsInRvVGhyb3dFcnJvciIsInRvRXF1YWwiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07QUFBRUEsRUFBQUE7QUFBRixJQUFXQyxPQUFPLENBQUMsTUFBRCxDQUF4Qjs7QUFDQSxNQUFNQyxZQUFZLEdBQUdELE9BQU8sQ0FBQyxrQkFBRCxDQUE1Qjs7QUFDQSxNQUFNO0FBQ0pFLEVBQUFBLFlBREk7QUFFSkMsRUFBQUEsU0FGSTtBQUdKQyxFQUFBQTtBQUhJLElBSUZKLE9BQU8sQ0FBQyx1QkFBRCxDQUpYOztBQU1BLE1BQU1LLHNCQUFzQixHQUFJO0FBQ2hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBUEE7QUFTQSxNQUFNQyxhQUFhLEdBQUdKLFlBQVksQ0FBQyxlQUFELENBQWxDLEMsQ0FDQTs7QUFFQUssUUFBUSxDQUFDLGVBQUQsRUFBa0IsTUFBTTtBQUM5QixRQUFNQyxjQUFjLEdBQUdULElBQUksQ0FBQ08sYUFBRCxFQUFnQixvQkFBaEIsQ0FBM0I7QUFFQUcsRUFBQUEsU0FBUyxDQUFDLE1BQU07QUFDZEwsSUFBQUEsVUFBVSxDQUFDSSxjQUFELEVBQWlCSCxzQkFBakIsQ0FBVjtBQUNELEdBRlEsQ0FBVDtBQUdBSyxFQUFBQSxRQUFRLENBQUMsTUFBTTtBQUNiUCxJQUFBQSxTQUFTLENBQUNHLGFBQUQsQ0FBVDtBQUNELEdBRk8sQ0FBUjtBQUlBSyxFQUFBQSxJQUFJLENBQUMsc0JBQUQsRUFBeUIsTUFBTTtBQUNqQyxVQUFNQyxJQUFJLEdBQUdYLFlBQVksQ0FBQ0ssYUFBRCxDQUF6QjtBQUNBTyxJQUFBQSxNQUFNLENBQUNELElBQUksQ0FBQ0UsZUFBTixDQUFOLENBQTZCQyxjQUE3QixDQUE0Q0MsUUFBNUM7QUFDRCxHQUhHLENBQUo7QUFLQUwsRUFBQUEsSUFBSSxDQUFDLHFEQUFELEVBQXdELE1BQU07QUFDaEVQLElBQUFBLFVBQVUsQ0FBQ0wsSUFBSSxDQUFDTyxhQUFELEVBQWdCLFlBQWhCLENBQUwsRUFBb0MscUJBQXBDLENBQVY7QUFDQU8sSUFBQUEsTUFBTSxDQUFDLE1BQU1aLFlBQVksQ0FBQ0ssYUFBRCxDQUFuQixDQUFOLENBQTBDVyxZQUExQztBQUNELEdBSEcsQ0FBSjtBQUtBTixFQUFBQSxJQUFJLENBQUMsOERBQUQsRUFBaUUsTUFBTTtBQUN6RSxVQUFNQyxJQUFJLEdBQUdYLFlBQVksQ0FBQ0ssYUFBYSxHQUFHLGVBQWpCLENBQXpCO0FBQ0FPLElBQUFBLE1BQU0sQ0FBQ0QsSUFBRCxDQUFOLENBQWFNLE9BQWIsQ0FBcUIsRUFBckI7QUFDRCxHQUhHLENBQUo7QUFJRCxDQXhCTyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBqb2luIH0gPSByZXF1aXJlKCdwYXRoJyk7XG5jb25zdCBsb2FkUG9saWNpZXMgPSByZXF1aXJlKCcuLi9wb2xpY2llcy5sb2FkJyk7XG5jb25zdCB7XG4gIGdldENvbmZpZ0RpcixcbiAgcmVtb3ZlRGlyLFxuICBjcmVhdGVGaWxlLFxufSA9IHJlcXVpcmUoJy4uLy4uLy4uL3Rlc3RzL2hlbHBlcicpO1xuXG5jb25zdCBpc0F1dGhlbnRpY2F0ZWRDb250ZW50ID0gYFxubW9kdWxlLmV4cG9ydHMgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgaWYgKCFyZXEubWV0YS5pc0F1dGhlbnRpY2F0ZWQpIHtcbiAgICByZXR1cm4gcmVzLmZvcmJpZGRlbigpO1xuICB9XG4gIHJldHVybiBuZXh0KCk7XG59O1xuYDtcblxuY29uc3QgdGVzdENvbmZpZ0RpciA9IGdldENvbmZpZ0RpcigndGVzdC1wb2xpY2llcycpO1xuLy8gY29uc3QgY29uZmlnRGlyID0gZ2V0Q29uZmlnRGlyKCk7XG5cbmRlc2NyaWJlKCdMb2FkIHBvbGljaWVzJywgKCkgPT4ge1xuICBjb25zdCBwb2xpY3lBdXRoUGF0aCA9IGpvaW4odGVzdENvbmZpZ0RpciwgJ2lzQXV0aGVudGljYXRlZC5qcycpO1xuXG4gIGJlZm9yZUFsbCgoKSA9PiB7XG4gICAgY3JlYXRlRmlsZShwb2xpY3lBdXRoUGF0aCwgaXNBdXRoZW50aWNhdGVkQ29udGVudCk7XG4gIH0pO1xuICBhZnRlckFsbCgoKSA9PiB7XG4gICAgcmVtb3ZlRGlyKHRlc3RDb25maWdEaXIpO1xuICB9KTtcblxuICB0ZXN0KCdTaG91bGQgbG9hZCBwb2xpY2llcycsICgpID0+IHtcbiAgICBjb25zdCByZXNwID0gbG9hZFBvbGljaWVzKHRlc3RDb25maWdEaXIpO1xuICAgIGV4cGVjdChyZXNwLmlzYXV0aGVudGljYXRlZCkudG9CZUluc3RhbmNlT2YoRnVuY3Rpb24pO1xuICB9KTtcblxuICB0ZXN0KCdTaG91bGQgdGhyb3cgZXJyb3IgaWYgcG9saWN5IGZpbGUgaXMgbm90IGEgZnVuY3Rpb24nLCAoKSA9PiB7XG4gICAgY3JlYXRlRmlsZShqb2luKHRlc3RDb25maWdEaXIsICdpbnZhbGlkLmpzJyksICdtb2R1bGUuZXhwb3J0cyA9IHt9Jyk7XG4gICAgZXhwZWN0KCgpID0+IGxvYWRQb2xpY2llcyh0ZXN0Q29uZmlnRGlyKSkudG9UaHJvd0Vycm9yKCk7XG4gIH0pO1xuXG4gIHRlc3QoXCJzaG91bGQgcmV0dXJuIGVtcHR5IG9iamVjdCBpZiBwb2xpY3kgZGlyZWN0b3J5IGRvZXNuJ3QgZXhpc3RcIiwgKCkgPT4ge1xuICAgIGNvbnN0IHJlc3AgPSBsb2FkUG9saWNpZXModGVzdENvbmZpZ0RpciArICdub3QtZXhpc3QtZGlyJyk7XG4gICAgZXhwZWN0KHJlc3ApLnRvRXF1YWwoe30pO1xuICB9KTtcbn0pO1xuIl19