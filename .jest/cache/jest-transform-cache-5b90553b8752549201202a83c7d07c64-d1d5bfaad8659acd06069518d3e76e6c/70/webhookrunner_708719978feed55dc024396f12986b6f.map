{"version":3,"sources":["webhook-runner.js"],"names":["debug","require","_","fetch","WorkerQueue","defaultConfiguration","defaultHeaders","WebhookRunner","constructor","eventHub","logger","configuration","webhooksMap","Map","listeners","Error","config","merge","queue","concurency","subscribe","executeListener","bind","deleteListener","event","has","fn","get","off","delete","createListener","error","listen","info","enqueue","set","on","webhooks","activeWebhooks","filter","webhook","isEnabled","forEach","run","then","catch","url","headers","method","body","JSON","stringify","created_at","Date","timeout","res","ok","statusCode","status","message","text","err","add","id","events","push","update","remove","filteredWebhooks","value","length","module","exports","createWebhookRunner","opts"],"mappings":"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","sourcesContent":["/**\n * The event hub is Social Gear App's event control center.\n */\n\nconst debug = require('debug')('app');\nconst _ = require('lodash');\nconst fetch = require('node-fetch');\n\nconst WorkerQueue = require('./worker-queue');\n\nconst defaultConfiguration = {\n  defaultHeaders: {},\n};\n\nclass WebhookRunner {\n  constructor({ eventHub, logger, configuration = {} }) {\n    debug('Initialized webhook runer');\n    this.eventHub = eventHub;\n    this.logger = logger;\n    this.webhooksMap = new Map();\n    this.listeners = new Map();\n\n    if (typeof configuration !== 'object') {\n      throw new Error(\n        'Invalid configuration provided to the webhookRunner.\\nCheck your server.json -> webhooks configuration',\n      );\n    }\n\n    this.config = _.merge(defaultConfiguration, configuration);\n\n    this.queue = new WorkerQueue({ logger, concurency: 5 });\n    this.queue.subscribe(this.executeListener.bind(this));\n  }\n\n  deleteListener(event) {\n    debug(`Deleting listener for event '${event}'`);\n    if (this.listeners.has(event)) {\n      const fn = this.listeners.get(event);\n\n      this.eventHub.off(event, fn);\n      this.listeners.delete(event);\n    }\n  }\n\n  createListener(event) {\n    debug(`Creating listener for event '${event}'`);\n    if (this.listeners.has(event)) {\n      this.logger.error(\n        `The webhook runner is already listening for the event '${event}'. Did you mean to call .register() ?`,\n      );\n    }\n\n    const listen = (info) => {\n      this.queue.enqueue({ event, info });\n    };\n\n    this.listeners.set(event, listen);\n    this.eventHub.on(event, listen);\n  }\n\n  async executeListener({ event, info }) {\n    debug(`Executing webhook for event '${event}'`);\n    const webhooks = this.webhooksMap.get(event) || [];\n    const activeWebhooks = webhooks.filter((webhook) => webhook.isEnabled === true);\n\n    activeWebhooks.forEach((webhook) => {\n      this.run(webhook, event, info)\n        .then(() => this.logger.debug(`Executed webhook for event ${event}`))\n        .catch((error) => {\n          this.logger.error('Error running webhook');\n          this.logger.error(error);\n        });\n    });\n  }\n\n  run(webhook, event, info = {}) {\n    const { url, headers } = webhook;\n\n    return fetch(url, {\n      method: 'post',\n      body: JSON.stringify({\n        event,\n        created_at: new Date(),\n        ...info,\n      }),\n      headers: {\n        ...this.config.defaultHeaders,\n        ...headers,\n        'X-App-Event': event,\n        'Content-Type': 'application/json',\n      },\n      timeout: 10000,\n    })\n      .then(async (res) => {\n        if (res.ok) {\n          return {\n            statusCode: res.status,\n          };\n        }\n\n        return {\n          statusCode: res.status,\n          message: await res.text(),\n        };\n      })\n      .catch((err) => ({\n        statusCode: 500,\n        message: err.message,\n      }));\n  }\n\n  add(webhook) {\n    debug(`Registering webhook '${webhook.id}'`);\n    const { events } = webhook;\n\n    events.forEach((event) => {\n      if (this.webhooksMap.has(event)) {\n        this.webhooksMap.get(event).push(webhook);\n      } else {\n        this.webhooksMap.set(event, [webhook]);\n        this.createListener(event);\n      }\n    });\n  }\n\n  update(webhook) {\n    debug(`Refreshing webhook '${webhook.id}'`);\n    this.remove(webhook);\n    this.add(webhook);\n  }\n\n  remove(webhook) {\n    debug(`Unregistering webhook '${webhook.id}'`);\n\n    this.webhooksMap.forEach((webhooks, event) => {\n      const filteredWebhooks = webhooks.filter((value) => value.id !== webhook.id);\n\n      // Cleanup hanging listeners\n      if (filteredWebhooks.length === 0) {\n        this.webhooksMap.delete(event);\n        this.deleteListener(event);\n      } else {\n        this.webhooksMap.set(event, filteredWebhooks);\n      }\n    });\n  }\n}\n\n/**\n * Expose a factory function instead of the class\n */\nmodule.exports = function createWebhookRunner(opts) {\n  return new WebhookRunner(opts);\n};\n"]}