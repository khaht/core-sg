{"version":3,"sources":["service.test.js"],"names":["service","require","describe","test","sgApp","model","kind","modelName","expect","toEqual"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,YAAD,CAAvB;;AAEAC,QAAQ,CAAC,SAAD,EAAY,MAAM;AACxBC,EAAAA,IAAI,CAAC,mCAAD,EAAsC,MAAM;AAC9C,UAAMC,KAAK,GAAG,EAAd;AACA,UAAMC,KAAK,GAAG;AAAEC,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,SAAS,EAAE;AAAjC,KAAd;AACAC,IAAAA,MAAM,CAACR,OAAO,CAAC;AAAEI,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,CAAR,CAAN,CAAkCI,OAAlC,CAA0C;AAAEL,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAA1C;AACD,GAJG,CAAJ;AAMAF,EAAAA,IAAI,CAAC,uCAAD,EAA0C,MAAM;AAClD,UAAMC,KAAK,GAAG,EAAd;AACA,UAAMC,KAAK,GAAG;AAAEC,MAAAA,IAAI,EAAE,gBAAR;AAA0BC,MAAAA,SAAS,EAAE;AAArC,KAAd;AACAC,IAAAA,MAAM,CAACR,OAAO,CAAC;AAAEI,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,CAAR,CAAN,CAAkCI,OAAlC,CAA0C;AAAEL,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAA1C;AACD,GAJG,CAAJ;AAKD,CAZO,CAAR","sourcesContent":["const service = require('../service');\n\ndescribe('Service', () => {\n  test('Should create single type service', () => {\n    const sgApp = {};\n    const model = { kind: 'singleType', modelName: 'auth' };\n    expect(service({ sgApp, model })).toEqual({ sgApp, model });\n  });\n\n  test('Should create collection type service', () => {\n    const sgApp = {};\n    const model = { kind: 'collectionType', modelName: 'auth' };\n    expect(service({ sgApp, model })).toEqual({ sgApp, model });\n  });\n});\n"]}