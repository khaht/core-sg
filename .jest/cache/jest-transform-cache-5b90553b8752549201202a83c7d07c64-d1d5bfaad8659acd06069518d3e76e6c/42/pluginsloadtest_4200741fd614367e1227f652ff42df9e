503b6d8fda93d98b29874efa8d919177
const _ = require('lodash');

const loadPlugins = require('../plugins.load');

describe('Load Plugins', () => {
  const defaultConfig = {
    plugins: {
      email: {
        provider: 'nodemailer',
        providerOptions: {
          host: 'smtp.gmail.com',
          port: '587',
          auth: {
            user: 'no-reply@c-plus.cloud',
            pass: ",/IX>U.tABm~y'I$%Py^wZ`8x\\b7+5=L"
          }
        },
        settings: {
          defaultFrom: 'no-reply@c-plus.cloud',
          defaultReplyTo: 'no-reply@c-plus.cloud'
        }
      }
    },
    installedPlugins: []
  };
  const config = { ...defaultConfig,

    get(path, defaultValue) {
      return _.get(defaultConfig, path, defaultValue);
    },

    set(path, val) {
      _.set(defaultConfig, path, val);

      return this;
    },

    has(path) {
      return _.has(defaultConfig, path);
    }

  };
  test('Should Load Plugins', async () => {
    const resp = await loadPlugins({
      dir: process.cwd(),
      config
    });
    expect(resp.email).not.toBeUndefined();
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBsdWdpbnMubG9hZC50ZXN0LmpzIl0sIm5hbWVzIjpbIl8iLCJyZXF1aXJlIiwibG9hZFBsdWdpbnMiLCJkZXNjcmliZSIsImRlZmF1bHRDb25maWciLCJwbHVnaW5zIiwiZW1haWwiLCJwcm92aWRlciIsInByb3ZpZGVyT3B0aW9ucyIsImhvc3QiLCJwb3J0IiwiYXV0aCIsInVzZXIiLCJwYXNzIiwic2V0dGluZ3MiLCJkZWZhdWx0RnJvbSIsImRlZmF1bHRSZXBseVRvIiwiaW5zdGFsbGVkUGx1Z2lucyIsImNvbmZpZyIsImdldCIsInBhdGgiLCJkZWZhdWx0VmFsdWUiLCJzZXQiLCJ2YWwiLCJoYXMiLCJ0ZXN0IiwicmVzcCIsImRpciIsInByb2Nlc3MiLCJjd2QiLCJleHBlY3QiLCJub3QiLCJ0b0JlVW5kZWZpbmVkIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxDQUFDLEdBQUdDLE9BQU8sQ0FBQyxRQUFELENBQWpCOztBQUNBLE1BQU1DLFdBQVcsR0FBR0QsT0FBTyxDQUFDLGlCQUFELENBQTNCOztBQUVBRSxRQUFRLENBQUMsY0FBRCxFQUFpQixNQUFNO0FBQzdCLFFBQU1DLGFBQWEsR0FBRztBQUNwQkMsSUFBQUEsT0FBTyxFQUFFO0FBQ1BDLE1BQUFBLEtBQUssRUFBRTtBQUNMQyxRQUFBQSxRQUFRLEVBQUUsWUFETDtBQUVMQyxRQUFBQSxlQUFlLEVBQUU7QUFDZkMsVUFBQUEsSUFBSSxFQUFFLGdCQURTO0FBRWZDLFVBQUFBLElBQUksRUFBRSxLQUZTO0FBR2ZDLFVBQUFBLElBQUksRUFBRTtBQUNKQyxZQUFBQSxJQUFJLEVBQUUsdUJBREY7QUFFSkMsWUFBQUEsSUFBSSxFQUFFO0FBRkY7QUFIUyxTQUZaO0FBVUxDLFFBQUFBLFFBQVEsRUFBRTtBQUNSQyxVQUFBQSxXQUFXLEVBQUUsdUJBREw7QUFFUkMsVUFBQUEsY0FBYyxFQUFFO0FBRlI7QUFWTDtBQURBLEtBRFc7QUFrQnBCQyxJQUFBQSxnQkFBZ0IsRUFBRTtBQWxCRSxHQUF0QjtBQXFCQSxRQUFNQyxNQUFNLEdBQUcsRUFDYixHQUFHZCxhQURVOztBQUViZSxJQUFBQSxHQUFHLENBQUNDLElBQUQsRUFBT0MsWUFBUCxFQUFxQjtBQUN0QixhQUFPckIsQ0FBQyxDQUFDbUIsR0FBRixDQUFNZixhQUFOLEVBQXFCZ0IsSUFBckIsRUFBMkJDLFlBQTNCLENBQVA7QUFDRCxLQUpZOztBQU1iQyxJQUFBQSxHQUFHLENBQUNGLElBQUQsRUFBT0csR0FBUCxFQUFZO0FBQ2J2QixNQUFBQSxDQUFDLENBQUNzQixHQUFGLENBQU1sQixhQUFOLEVBQXFCZ0IsSUFBckIsRUFBMkJHLEdBQTNCOztBQUNBLGFBQU8sSUFBUDtBQUNELEtBVFk7O0FBV2JDLElBQUFBLEdBQUcsQ0FBQ0osSUFBRCxFQUFPO0FBQ1IsYUFBT3BCLENBQUMsQ0FBQ3dCLEdBQUYsQ0FBTXBCLGFBQU4sRUFBcUJnQixJQUFyQixDQUFQO0FBQ0Q7O0FBYlksR0FBZjtBQWdCQUssRUFBQUEsSUFBSSxDQUFDLHFCQUFELEVBQXdCLFlBQVk7QUFDdEMsVUFBTUMsSUFBSSxHQUFHLE1BQU14QixXQUFXLENBQUM7QUFBRXlCLE1BQUFBLEdBQUcsRUFBRUMsT0FBTyxDQUFDQyxHQUFSLEVBQVA7QUFBc0JYLE1BQUFBO0FBQXRCLEtBQUQsQ0FBOUI7QUFDQVksSUFBQUEsTUFBTSxDQUFDSixJQUFJLENBQUNwQixLQUFOLENBQU4sQ0FBbUJ5QixHQUFuQixDQUF1QkMsYUFBdkI7QUFDRCxHQUhHLENBQUo7QUFJRCxDQTFDTyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgXyA9IHJlcXVpcmUoJ2xvZGFzaCcpO1xuY29uc3QgbG9hZFBsdWdpbnMgPSByZXF1aXJlKCcuLi9wbHVnaW5zLmxvYWQnKTtcblxuZGVzY3JpYmUoJ0xvYWQgUGx1Z2lucycsICgpID0+IHtcbiAgY29uc3QgZGVmYXVsdENvbmZpZyA9IHtcbiAgICBwbHVnaW5zOiB7XG4gICAgICBlbWFpbDoge1xuICAgICAgICBwcm92aWRlcjogJ25vZGVtYWlsZXInLFxuICAgICAgICBwcm92aWRlck9wdGlvbnM6IHtcbiAgICAgICAgICBob3N0OiAnc210cC5nbWFpbC5jb20nLFxuICAgICAgICAgIHBvcnQ6ICc1ODcnLFxuICAgICAgICAgIGF1dGg6IHtcbiAgICAgICAgICAgIHVzZXI6ICduby1yZXBseUBjLXBsdXMuY2xvdWQnLFxuICAgICAgICAgICAgcGFzczogXCIsL0lYPlUudEFCbX55J0kkJVB5XndaYDh4XFxcXGI3KzU9TFwiLFxuICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICAgIHNldHRpbmdzOiB7XG4gICAgICAgICAgZGVmYXVsdEZyb206ICduby1yZXBseUBjLXBsdXMuY2xvdWQnLFxuICAgICAgICAgIGRlZmF1bHRSZXBseVRvOiAnbm8tcmVwbHlAYy1wbHVzLmNsb3VkJyxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBpbnN0YWxsZWRQbHVnaW5zOiBbXVxuICB9O1xuXG4gIGNvbnN0IGNvbmZpZyA9IHtcbiAgICAuLi5kZWZhdWx0Q29uZmlnLFxuICAgIGdldChwYXRoLCBkZWZhdWx0VmFsdWUpIHtcbiAgICAgIHJldHVybiBfLmdldChkZWZhdWx0Q29uZmlnLCBwYXRoLCBkZWZhdWx0VmFsdWUpO1xuICAgIH0sXG5cbiAgICBzZXQocGF0aCwgdmFsKSB7XG4gICAgICBfLnNldChkZWZhdWx0Q29uZmlnLCBwYXRoLCB2YWwpO1xuICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfSxcblxuICAgIGhhcyhwYXRoKSB7XG4gICAgICByZXR1cm4gXy5oYXMoZGVmYXVsdENvbmZpZywgcGF0aCk7XG4gICAgfSxcbiAgfTtcblxuICB0ZXN0KCdTaG91bGQgTG9hZCBQbHVnaW5zJywgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IHJlc3AgPSBhd2FpdCBsb2FkUGx1Z2lucyh7IGRpcjogcHJvY2Vzcy5jd2QoKSwgY29uZmlnIH0pO1xuICAgIGV4cGVjdChyZXNwLmVtYWlsKS5ub3QudG9CZVVuZGVmaW5lZCgpO1xuICB9KTtcbn0pO1xuIl19