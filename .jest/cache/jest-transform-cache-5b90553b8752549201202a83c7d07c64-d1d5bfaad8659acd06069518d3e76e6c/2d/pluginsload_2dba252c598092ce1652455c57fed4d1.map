{"version":3,"sources":["plugins.load.js"],"names":["join","require","existsSync","_","findPackagePath","loadFiles","loadConfig","loadLocalPlugins","dir","config","pluginsDir","files","configs","Promise","all","userConfigs","Object","keys","reduce","acc","plugin","get","merge","loadPlugins","installedPlugins","plugins","pluginPath","pluginConfig","userConfig","mergedConfig","set","assign","module","exports","localPlugins","pluginsIntersection","intersection","length","Error","map","p"],"mappings":"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","sourcesContent":["const { join } = require('path');\nconst { existsSync } = require('fs-extra');\nconst _ = require('lodash');\nconst findPackagePath = require('./package-path.load');\nconst loadFiles = require('./files.load');\nconst loadConfig = require('./config-files.load');\n\nconst loadLocalPlugins = async ({ dir, config }) => {\n  const pluginsDir = join(dir, 'plugins');\n\n  if (!existsSync(pluginsDir)) return {};\n\n  const [files, configs] = await Promise.all([\n    loadFiles(pluginsDir, '{*/!(config)/*.*(js|json),*/package.json}'),\n    loadConfig(pluginsDir, '*/config/**/*.+(js|json)'),\n  ]);\n  const userConfigs = Object.keys(files).reduce((acc, plugin) => {\n    acc[plugin] = { config: config.get(['plugins', plugin], {}) };\n    return acc;\n  }, {});\n  return _.merge(files, configs, userConfigs);\n};\n\nconst loadPlugins = async ({ installedPlugins, config }) => {\n  const plugins = {};\n\n  // eslint-disable-next-line no-restricted-syntax\n  for (const plugin of installedPlugins) {\n    const pluginPath = findPackagePath(`@social-gear/plugin-${plugin}`);\n\n    // eslint-disable-next-line no-await-in-loop\n    const files = await loadFiles(\n      pluginPath,\n      '{!(config|node_modules|tests)/*.*(js|json),package.json}',\n    );\n\n    // eslint-disable-next-line no-await-in-loop\n    const { config: pluginConfig } = await loadConfig(pluginPath);\n\n    const userConfig = config.get(['plugins', plugin], {});\n\n    const mergedConfig = _.merge(pluginConfig, userConfig);\n\n    _.set(plugins, plugin, _.assign({}, files, { config: mergedConfig }));\n  }\n\n  return plugins;\n};\n\nmodule.exports = async ({ dir, config }) => {\n  const localPlugins = await loadLocalPlugins({ dir, config });\n  const plugins = await loadPlugins({\n    installedPlugins: config.installedPlugins,\n    config,\n  });\n\n  const pluginsIntersection = _.intersection(\n    Object.keys(localPlugins),\n    Object.keys(plugins),\n  );\n\n  if (pluginsIntersection.length > 0) {\n    throw new Error(\n      `You have some local plugins with the same name as npm installed plugins:\\n${pluginsIntersection\n        .map((p) => `- ${p}`)\n        .join('\\n')}`,\n    );\n  }\n\n  // check for conflicts\n  return _.merge(plugins, localPlugins);\n};\n"]}