{"version":3,"sources":["primary-key.js"],"names":["_","require","replaceIdByPrimaryKey","params","model","newParams","has","id","primaryKey","module","exports"],"mappings":"AAAA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;AAEA;AACA;AACA;AACA;;;AACA,MAAMC,qBAAqB,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC/C,QAAMC,SAAS,GAAG,EAAE,GAAGF;AAAL,GAAlB;;AACA,MAAIH,CAAC,CAACM,GAAF,CAAMH,MAAN,EAAc,IAAd,CAAJ,EAAyB;AACvB,WAAOE,SAAS,CAACE,EAAjB;AACAF,IAAAA,SAAS,CAACD,KAAK,CAACI,UAAP,CAAT,GAA8BL,MAAM,CAACC,KAAK,CAACI,UAAP,CAAN,IAA4BL,MAAM,CAACI,EAAjE;AACD;;AACD,SAAOF,SAAP;AACD,CAPD;;AASAI,MAAM,CAACC,OAAP,GAAiB;AACfR,EAAAA;AADe,CAAjB","sourcesContent":["const _ = require('lodash');\n\n/**\n * If exists, rename the key \"id\" by the primary key name\n * of the model (\"_id\" by default for mongoose).\n */\nconst replaceIdByPrimaryKey = (params, model) => {\n  const newParams = { ...params };\n  if (_.has(params, 'id')) {\n    delete newParams.id;\n    newParams[model.primaryKey] = params[model.primaryKey] || params.id;\n  }\n  return newParams;\n};\n\nmodule.exports = {\n  replaceIdByPrimaryKey,\n};\n"]}