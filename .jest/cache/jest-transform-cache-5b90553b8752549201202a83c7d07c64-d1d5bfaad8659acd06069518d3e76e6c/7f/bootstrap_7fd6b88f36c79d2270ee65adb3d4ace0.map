{"version":3,"sources":["bootstrap.js"],"names":["_","require","getConfigUrls","getKind","obj","kind","pickSchema","model","schema","cloneDeep","pick","module","exports","sgApp","connections","defaultConnection","config","get","contentTypes","apiModules","Object","keys","api","models","reduce","acc","apiName","forEach","modelName","assign","__schema__","modelType","uid","globalId","upperFirst","camelCase","collectionName","toLocaleLowerCase","connection","controllers","key","index","controller","identity","services","routes","concat","middleware","settings","current","currentSettings","merge","isObject","defaults","enabled","port","host","serverUrl","server","url"],"mappings":"AAAA;AACA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAoBD,OAAO,CAAC,qBAAD,CAAjC;;AAEA,MAAME,OAAO,GAAIC,GAAD,IAASA,GAAG,CAACC,IAAJ,IAAY,gBAArC;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC5B,QAAMC,MAAM,GAAGR,CAAC,CAACS,SAAF,CACbT,CAAC,CAACU,IAAF,CAAOH,KAAP,EAAc,CACZ,YADY,EAEZ,gBAFY,EAGZ,MAHY,EAIZ,SAJY,EAKZ,YALY,CAAd,CADa,CAAf;;AAUAC,EAAAA,MAAM,CAACH,IAAP,GAAcF,OAAO,CAACI,KAAD,CAArB;AACA,SAAOC,MAAP;AACD,CAbD;;AAeAG,MAAM,CAACC,OAAP,GAAkBC,KAAD,IAAW;AAC1B;AACAA,EAAAA,KAAK,CAACC,WAAN,GAAoB,EAApB;AAEA,QAAMC,iBAAiB,GAAGF,KAAK,CAACG,MAAN,CAAaC,GAAb,CAAiB,4BAAjB,CAA1B,CAJ0B,CAM1B;;AACAJ,EAAAA,KAAK,CAACG,MAAN,CAAaF,WAAb,GAA2BD,KAAK,CAACG,MAAN,CAAaC,GAAb,CAAiB,sBAAjB,EAAyC,EAAzC,CAA3B;AAEAJ,EAAAA,KAAK,CAACK,YAAN,GAAqB,EAArB;AAEA,QAAMC,UAAU,GAAGC,MAAM,CAACC,IAAP,CAAYR,KAAK,CAACS,GAAN,IAAa,EAAzB,CAAnB;AAEAT,EAAAA,KAAK,CAACU,MAAN,GAAeJ,UAAU,CAACK,MAAX,CAAkB,CAACC,GAAD,EAAMC,OAAN,KAAkB;AACjD,UAAMJ,GAAG,GAAGT,KAAK,CAACS,GAAN,CAAUI,OAAV,CAAZ;AAEAN,IAAAA,MAAM,CAACC,IAAP,CAAYC,GAAG,CAACC,MAAJ,IAAc,EAA1B,EAA8BI,OAA9B,CAAuCC,SAAD,IAAe;AACnD,YAAMrB,KAAK,GAAGM,KAAK,CAACS,GAAN,CAAUI,OAAV,EAAmBH,MAAnB,CAA0BK,SAA1B,CAAd;AAEAR,MAAAA,MAAM,CAACS,MAAP,CAActB,KAAd,EAAqB;AACnBuB,QAAAA,UAAU,EAAExB,UAAU,CAACC,KAAD,CADH;AAEnBF,QAAAA,IAAI,EAAEF,OAAO,CAACI,KAAD,CAFM;AAGnBwB,QAAAA,SAAS,EAAE,aAHQ;AAInBC,QAAAA,GAAG,EAAG,gBAAeN,OAAQ,IAAGE,SAAU,EAJvB;AAKnBF,QAAAA,OALmB;AAMnBE,QAAAA,SANmB;AAOnBK,QAAAA,QAAQ,EAAE1B,KAAK,CAAC0B,QAAN,IAAkBjC,CAAC,CAACkC,UAAF,CAAalC,CAAC,CAACmC,SAAF,CAAYP,SAAZ,CAAb,CAPT;AAQnBQ,QAAAA,cAAc,EACZ7B,KAAK,CAAC6B,cAAN,IAAyB,GAAER,SAAU,EAAb,CAAeS,iBAAf,EATP;AAUnBC,QAAAA,UAAU,EAAE/B,KAAK,CAAC+B,UAAN,IAAoBvB;AAVb,OAArB;AAaAF,MAAAA,KAAK,CAACK,YAAN,CAAmBX,KAAK,CAACyB,GAAzB,IAAgCzB,KAAhC,CAhBmD,CAkBnD;AACA;AAEA;AACA;;AAEAkB,MAAAA,GAAG,CAACG,SAAD,CAAH,GAAiBrB,KAAjB;AACD,KAzBD;AA2BA,WAAOkB,GAAP;AACD,GA/Bc,EA+BZ,EA/BY,CAAf,CAb0B,CA8C1B;;AACAZ,EAAAA,KAAK,CAAC0B,WAAN,GAAoBpB,UAAU,CAACK,MAAX,CAAkB,CAACC,GAAD,EAAMe,GAAN,KAAc;AAClDpB,IAAAA,MAAM,CAACC,IAAP,CAAYR,KAAK,CAACS,GAAN,CAAUkB,GAAV,EAAeD,WAAf,IAA8B,EAA1C,EAA8CZ,OAA9C,CAAuDc,KAAD,IAAW;AAC/D,YAAMC,UAAU,GAAG7B,KAAK,CAACS,GAAN,CAAUkB,GAAV,EAAeD,WAAf,CAA2BE,KAA3B,CAAnB;AACAC,MAAAA,UAAU,CAACC,QAAX,GAAsBD,UAAU,CAACC,QAAX,IAAuB3C,CAAC,CAACkC,UAAF,CAAaO,KAAb,CAA7C;AACAhB,MAAAA,GAAG,CAACgB,KAAD,CAAH,GAAaC,UAAb;AACD,KAJD;AAKA,WAAOjB,GAAP;AACD,GAPmB,EAOjB,EAPiB,CAApB,CA/C0B,CAwD1B;;AACAZ,EAAAA,KAAK,CAAC+B,QAAN,GAAiBzB,UAAU,CAACK,MAAX,CAAkB,CAACC,GAAD,EAAMe,GAAN,KAAc;AAC/CpB,IAAAA,MAAM,CAACC,IAAP,CAAYR,KAAK,CAACS,GAAN,CAAUkB,GAAV,EAAeI,QAAf,IAA2B,EAAvC,EAA2CjB,OAA3C,CAAoDc,KAAD,IAAW;AAC5DhB,MAAAA,GAAG,CAACgB,KAAD,CAAH,GAAa5B,KAAK,CAACS,GAAN,CAAUkB,GAAV,EAAeI,QAAf,CAAwBH,KAAxB,CAAb;AACD,KAFD;AAGA,WAAOhB,GAAP;AACD,GALgB,EAKd,EALc,CAAjB,CAzD0B,CAgE1B;;AACAZ,EAAAA,KAAK,CAACG,MAAN,CAAa6B,MAAb,GAAsB1B,UAAU,CAACK,MAAX,CACpB,CAACC,GAAD,EAAMe,GAAN,KAAcf,GAAG,CAACqB,MAAJ,CAAW9C,CAAC,CAACiB,GAAF,CAAMJ,KAAK,CAACS,GAAN,CAAUkB,GAAV,CAAN,EAAsB,eAAtB,KAA0C,EAArD,CADM,EAEpB,EAFoB,CAAtB,CAjE0B,CAsE1B;;AACA3B,EAAAA,KAAK,CAACG,MAAN,CAAa+B,UAAb,CAAwBC,QAAxB,GAAmC5B,MAAM,CAACC,IAAP,CAAYR,KAAK,CAACkC,UAAlB,EAA8BvB,MAA9B,CACjC,CAACC,GAAD,EAAMwB,OAAN,KAAkB;AAChB;AACA,UAAMC,eAAe,GAAGlD,CAAC,CAACmD,KAAF,CACtBnD,CAAC,CAACS,SAAF,CACET,CAAC,CAACiB,GAAF,CAAMJ,KAAK,CAACkC,UAAN,CAAiBE,OAAjB,CAAN,EAAiC,CAAC,UAAD,EAAaA,OAAb,CAAjC,EAAwD,EAAxD,CADF,CADsB,EAItBpC,KAAK,CAACG,MAAN,CAAaC,GAAb,CAAiB,CAAC,YAAD,EAAe,UAAf,EAA2BgC,OAA3B,CAAjB,EAAsD,EAAtD,CAJsB,CAAxB;;AAOAxB,IAAAA,GAAG,CAACwB,OAAD,CAAH,GAAe,CAACjD,CAAC,CAACoD,QAAF,CAAWF,eAAX,CAAD,GAA+B,EAA/B,GAAoCA,eAAnD,CATgB,CAWhB;;AACAlD,IAAAA,CAAC,CAACqD,QAAF,CAAW5B,GAAG,CAACwB,OAAD,CAAd,EAAyB;AAAEK,MAAAA,OAAO,EAAE;AAAX,KAAzB;;AAEA,WAAO7B,GAAP;AACD,GAhBgC,EAiBjC,EAjBiC,CAAnC,CAvE0B,CA2F1B;;AACAZ,EAAAA,KAAK,CAACG,MAAN,CAAauC,IAAb,GAAoB1C,KAAK,CAACG,MAAN,CAAaC,GAAb,CAAiB,aAAjB,KAAmCJ,KAAK,CAACG,MAAN,CAAauC,IAApE;AACA1C,EAAAA,KAAK,CAACG,MAAN,CAAawC,IAAb,GAAoB3C,KAAK,CAACG,MAAN,CAAaC,GAAb,CAAiB,aAAjB,KAAmCJ,KAAK,CAACG,MAAN,CAAawC,IAApE;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAgBvD,aAAa,CAACW,KAAK,CAACG,MAAN,CAAaC,GAAb,CAAiB,QAAjB,CAAD,CAAnC;AAEAJ,EAAAA,KAAK,CAACG,MAAN,CAAa0C,MAAb,GAAsB7C,KAAK,CAACG,MAAN,CAAa0C,MAAb,IAAuB,EAA7C;AACA7C,EAAAA,KAAK,CAACG,MAAN,CAAa0C,MAAb,CAAoBC,GAApB,GAA0BF,SAA1B;AACD,CAnGD","sourcesContent":["/* eslint-disable no-param-reassign */\nconst _ = require('lodash');\n\nconst { getConfigUrls } = require('./utils/config.util');\n\nconst getKind = (obj) => obj.kind || 'collectionType';\n\nconst pickSchema = (model) => {\n  const schema = _.cloneDeep(\n    _.pick(model, [\n      'connection',\n      'collectionName',\n      'info',\n      'options',\n      'attributes',\n    ])\n  );\n\n  schema.kind = getKind(model);\n  return schema;\n};\n\nmodule.exports = (sgApp) => {\n  // Set connections.\n  sgApp.connections = {};\n\n  const defaultConnection = sgApp.config.get('database.defaultConnection');\n\n  // Set current connections.\n  sgApp.config.connections = sgApp.config.get('database.connections', {});\n\n  sgApp.contentTypes = {};\n\n  const apiModules = Object.keys(sgApp.api || []);\n\n  sgApp.models = apiModules.reduce((acc, apiName) => {\n    const api = sgApp.api[apiName];\n\n    Object.keys(api.models || {}).forEach((modelName) => {\n      const model = sgApp.api[apiName].models[modelName];\n\n      Object.assign(model, {\n        __schema__: pickSchema(model),\n        kind: getKind(model),\n        modelType: 'contentType',\n        uid: `application::${apiName}.${modelName}`,\n        apiName,\n        modelName,\n        globalId: model.globalId || _.upperFirst(_.camelCase(modelName)),\n        collectionName:\n          model.collectionName || `${modelName}`.toLocaleLowerCase(),\n        connection: model.connection || defaultConnection,\n      });\n\n      sgApp.contentTypes[model.uid] = model;\n\n      // TODO: Create core api (For example: Default route, controller, services)\n      // const { service, controller } = createCoreApi({ model, api, sgApp });\n\n      // _.set(sgApp.api[apiName], ['services', modelName], service);\n      // _.set(sgApp.api[apiName], ['controllers', modelName], controller);\n\n      acc[modelName] = model;\n    });\n\n    return acc;\n  }, {});\n\n  // Set controllers.\n  sgApp.controllers = apiModules.reduce((acc, key) => {\n    Object.keys(sgApp.api[key].controllers || {}).forEach((index) => {\n      const controller = sgApp.api[key].controllers[index];\n      controller.identity = controller.identity || _.upperFirst(index);\n      acc[index] = controller;\n    });\n    return acc;\n  }, {});\n\n  // Set services.\n  sgApp.services = apiModules.reduce((acc, key) => {\n    Object.keys(sgApp.api[key].services || {}).forEach((index) => {\n      acc[index] = sgApp.api[key].services[index];\n    });\n    return acc;\n  }, {});\n\n  // Set routes.\n  sgApp.config.routes = apiModules.reduce(\n    (acc, key) => acc.concat(_.get(sgApp.api[key], 'config.routes') || {}),\n    []\n  );\n\n  // Preset config in alphabetical order.\n  sgApp.config.middleware.settings = Object.keys(sgApp.middleware).reduce(\n    (acc, current) => {\n      // Try to find the settings in the current environment, then in the main configurations.\n      const currentSettings = _.merge(\n        _.cloneDeep(\n          _.get(sgApp.middleware[current], ['defaults', current], {})\n        ),\n        sgApp.config.get(['middleware', 'settings', current], {})\n      );\n\n      acc[current] = !_.isObject(currentSettings) ? {} : currentSettings;\n\n      // Ensure that enabled key exist by forcing to false.\n      _.defaults(acc[current], { enabled: false });\n\n      return acc;\n    },\n    {}\n  );\n\n  // default settings\n  sgApp.config.port = sgApp.config.get('server.port') || sgApp.config.port;\n  sgApp.config.host = sgApp.config.get('server.host') || sgApp.config.host;\n\n  const { serverUrl } = getConfigUrls(sgApp.config.get('server'));\n\n  sgApp.config.server = sgApp.config.server || {};\n  sgApp.config.server.url = serverUrl;\n};\n"]}