{"version":3,"sources":["glob.load.test.js"],"names":["mock","globLoader","require","glob","describe","afterAll","jest","resetAllMocks","test","mockImplementation","_","cb","Error","expect","rejects","toThrowError","resolves","toEqual"],"mappings":"AAGA,cAAKA,IAAL,CAAU,MAAV;;;;;;;;;;;;AAHA,MAAMC,UAAU,GAAGC,OAAO,CAAC,cAAD,CAA1B;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AAGAE,QAAQ,CAAC,WAAD,EAAc,MAAM;AAC1BC,EAAAA,QAAQ,CAAC,MAAM;AACbC,IAAAA,IAAI,CAACC,aAAL;AACD,GAFO,CAAR;AAIAC,EAAAA,IAAI,CAAC,4CAAD,EAA+C,YAAY;AAC7DL,IAAAA,IAAI,CAACM,kBAAL,CAAwB,CAACC,CAAD,EAAIC,EAAJ,KAAWA,EAAE,CAAC,IAAIC,KAAJ,CAAU,YAAV,CAAD,CAArC;AACA,UAAMC,MAAM,CAACZ,UAAU,CAAC,GAAD,CAAX,CAAN,CAAwBa,OAAxB,CAAgCC,YAAhC,EAAN;AACD,GAHG,CAAJ;AAKAP,EAAAA,IAAI,CAAC,0BAAD,EAA6B,YAAY;AAC3CL,IAAAA,IAAI,CAACM,kBAAL,CAAwB,CAACC,CAAD,EAAIC,EAAJ,KAAWA,EAAE,CAAC,IAAD,EAAO,CAAC,UAAD,CAAP,CAArC;AACA,UAAME,MAAM,CAACZ,UAAU,CAAC,GAAD,CAAX,CAAN,CAAwBe,QAAxB,CAAiCC,OAAjC,CAAyC,CAAC,UAAD,CAAzC,CAAN;AACD,GAHG,CAAJ;AAID,CAdO,CAAR","sourcesContent":["const globLoader = require('../glob.load');\nconst glob = require('glob');\n\njest.mock('glob');\ndescribe('glob.load', () => {\n  afterAll(() => {\n    jest.resetAllMocks();\n  });\n\n  test('should throw error if pattern is not valid', async () => {\n    glob.mockImplementation((_, cb) => cb(new Error('Test Error')));\n    await expect(globLoader('/')).rejects.toThrowError();\n  });\n\n  test('should return files list', async () => {\n    glob.mockImplementation((_, cb) => cb(null, ['/test.js']));\n    await expect(globLoader('/')).resolves.toEqual(['/test.js']);\n  });\n});\n"]}