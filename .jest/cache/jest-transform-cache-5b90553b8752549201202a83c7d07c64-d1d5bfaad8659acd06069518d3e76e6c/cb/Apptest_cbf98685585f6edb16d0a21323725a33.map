{"version":3,"sources":["App.test.js"],"names":["sgApp","require","describe","OLD_ENV","process","env","beforeEach","jest","resetModules","test","app","expect","Object","keys","toEqual","log","error","fn","server","_events","toHaveBeenCalledTimes","stopWithError","code","port","cb","conn","remoteAddress","remotePort","on","destroy","close","initServer","connection","listen","config","get","key","logStartupMessage","callback","HIDE_STARTUP_MESSAGE","type","stop","exit","load","start","toHaveBeenCalledWith","isLoaded","Error","db","plugins","plugin1","plugin2","eventHub","removeAllListeners","admin","use","toHaveBeenCalled","NODE_ENV","req","res","status","next","health","url","method","mockImplementation","resp","toBe","err","send","message","serverError","email","functions","bootstrap","runBootstrapFunctions","freeze","getModel","query"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,QAAD,CAArB;;AAEAC,QAAQ,CAAC,UAAD,EAAa,MAAM;AACzB,QAAMC,OAAO,GAAGC,OAAO,CAACC,GAAxB;AAEAC,EAAAA,UAAU,CAAC,MAAM;AACfC,IAAAA,IAAI,CAACC,YAAL;AACAJ,IAAAA,OAAO,CAACC,GAAR,GAAc,EAAE,GAAGF;AAAL,KAAd;AACD,GAHS,CAAV;AAKAM,EAAAA,IAAI,CAAC,oBAAD,EAAuB,MAAM;AAC/B,UAAMC,GAAG,GAAGV,KAAK,EAAjB;AACAW,IAAAA,MAAM,CAACC,MAAM,CAACC,IAAP,CAAYH,GAAZ,CAAD,CAAN,CAAyBI,OAAzB,CAAiC,CAC/B,KAD+B,EAE/B,QAF+B,EAG/B,QAH+B,EAI/B,KAJ+B,EAK/B,KAL+B,EAM/B,OAN+B,EAO/B,SAP+B,EAQ/B,QAR+B,EAS/B,UAT+B,EAU/B,IAV+B,EAW/B,UAX+B,CAAjC;AAaD,GAfG,CAAJ;AAiBAZ,EAAAA,QAAQ,CAAC,kBAAD,EAAqB,MAAM;AACjCO,IAAAA,IAAI,CAAC,yBAAD,EAA4B,YAAY;AAC1C,YAAMC,GAAG,GAAGV,KAAK,EAAjB;AACAU,MAAAA,GAAG,CAACK,GAAJ,CAAQC,KAAR,GAAgBT,IAAI,CAACU,EAAL,CAAQ,MAAM,OAAd,CAAhB;;AACAP,MAAAA,GAAG,CAACQ,MAAJ,CAAWC,OAAX,CAAmBH,KAAnB,CAAyB,OAAzB;;AACAL,MAAAA,MAAM,CAACD,GAAG,CAACK,GAAJ,CAAQC,KAAT,CAAN,CAAsBI,qBAAtB,CAA4C,CAA5C;AACD,KALG,CAAJ;AAOAX,IAAAA,IAAI,CAAC,+EAAD,EAAkF,YAAY;AAChG,YAAMC,GAAG,GAAGV,KAAK,EAAjB;AACAU,MAAAA,GAAG,CAACW,aAAJ,GAAoBd,IAAI,CAACU,EAAL,EAApB;;AACAP,MAAAA,GAAG,CAACQ,MAAJ,CAAWC,OAAX,CAAmBH,KAAnB,CAAyB;AAAEM,QAAAA,IAAI,EAAE,YAAR;AAAsBC,QAAAA,IAAI,EAAE;AAA5B,OAAzB;;AACAZ,MAAAA,MAAM,CAACD,GAAG,CAACW,aAAL,CAAN,CAA0BD,qBAA1B,CAAgD,CAAhD;AACD,KALG,CAAJ;AAOAX,IAAAA,IAAI,CAAC,gDAAD,EAAmD,YAAY;AACjE,YAAMe,EAAE,GAAGjB,IAAI,CAACU,EAAL,EAAX;AACA,YAAMP,GAAG,GAAGV,KAAK,EAAjB;AACA,YAAMyB,IAAI,GAAG;AACXC,QAAAA,aAAa,EAAE,WADJ;AAEXC,QAAAA,UAAU,EAAE,IAFD;AAGXC,QAAAA,EAAE,EAAErB,IAAI,CAACU,EAAL,EAHO;AAIXY,QAAAA,OAAO,EAAEtB,IAAI,CAACU,EAAL;AAJE,OAAb;AAMAP,MAAAA,GAAG,CAACQ,MAAJ,CAAWY,KAAX,GAAmBvB,IAAI,CAACU,EAAL,EAAnB;AAEAP,MAAAA,GAAG,CAACqB,UAAJ;;AACArB,MAAAA,GAAG,CAACQ,MAAJ,CAAWC,OAAX,CAAmBa,UAAnB,CAA8B,CAA9B,EAAiCP,IAAjC;;AACAf,MAAAA,GAAG,CAACQ,MAAJ,CAAWW,OAAX,CAAmBL,EAAnB;AACAb,MAAAA,MAAM,CAACc,IAAI,CAACI,OAAN,CAAN,CAAqBT,qBAArB,CAA2C,CAA3C;AACD,KAfG,CAAJ;AAgBD,GA/BO,CAAR;AAiCAlB,EAAAA,QAAQ,CAAC,gCAAD,EAAmC,MAAM;AAC/CO,IAAAA,IAAI,CAAC,sDAAD,EAAyD,MAAM;AACjE,YAAMC,GAAG,GAAGV,KAAK,EAAjB;AACAU,MAAAA,GAAG,CAACQ,MAAJ,CAAWe,MAAX,GAAoB1B,IAAI,CAACU,EAAL,EAApB;AACAP,MAAAA,GAAG,CAACuB,MAAJ;AACAtB,MAAAA,MAAM,CAACD,GAAG,CAACQ,MAAJ,CAAWe,MAAZ,CAAN,CAA0Bb,qBAA1B,CAAgD,CAAhD;AACD,KALG,CAAJ;AAOAX,IAAAA,IAAI,CAAC,+CAAD,EAAkD,MAAM;AAC1D,YAAMC,GAAG,GAAGV,KAAK,EAAjB;AACAU,MAAAA,GAAG,CAACQ,MAAJ,CAAWe,MAAX,GAAoB1B,IAAI,CAACU,EAAL,EAApB;AACAP,MAAAA,GAAG,CAACwB,MAAJ,CAAWC,GAAX,GAAiB5B,IAAI,CAACU,EAAL,CAASmB,GAAD,IAAS;AAChC,YAAIA,GAAG,IAAI,eAAX,EAA4B,OAAO,eAAP;AAC7B,OAFgB,CAAjB;AAGA1B,MAAAA,GAAG,CAACuB,MAAJ;AACAtB,MAAAA,MAAM,CAACD,GAAG,CAACQ,MAAJ,CAAWe,MAAZ,CAAN,CAA0Bb,qBAA1B,CAAgD,CAAhD;AACAT,MAAAA,MAAM,CAACD,GAAG,CAACwB,MAAJ,CAAWC,GAAZ,CAAN,CAAuBf,qBAAvB,CAA6C,CAA7C;AACD,KATG,CAAJ;AAWAX,IAAAA,IAAI,CAAC,8BAAD,EAAiC,MAAM;AACzC,YAAMe,EAAE,GAAGjB,IAAI,CAACU,EAAL,EAAX;AACA,YAAMP,GAAG,GAAGV,KAAK,EAAjB;AACAU,MAAAA,GAAG,CAAC2B,iBAAJ,GAAwB9B,IAAI,CAACU,EAAL,EAAxB;AACAP,MAAAA,GAAG,CAACQ,MAAJ,CAAWe,MAAX,GAAoB1B,IAAI,CAACU,EAAL,CAAQ,CAACgB,MAAD,EAASK,QAAT,KAAsB;AAChD,YAAIL,MAAM,IAAI,OAAd,EAAuBK,QAAQ;AAChC,OAFmB,CAApB;AAGA5B,MAAAA,GAAG,CAACwB,MAAJ,CAAWC,GAAX,GAAiB5B,IAAI,CAACU,EAAL,CAASmB,GAAD,IAAS;AAChC,YAAIA,GAAG,IAAI,eAAX,EAA4B,OAAO,OAAP;AAC7B,OAFgB,CAAjB;AAGA1B,MAAAA,GAAG,CAACuB,MAAJ,CAAWT,EAAX;AACAb,MAAAA,MAAM,CAACa,EAAD,CAAN,CAAWJ,qBAAX,CAAiC,CAAjC;AACAT,MAAAA,MAAM,CAACD,GAAG,CAACQ,MAAJ,CAAWe,MAAZ,CAAN,CAA0Bb,qBAA1B,CAAgD,CAAhD;AACAT,MAAAA,MAAM,CAACD,GAAG,CAACwB,MAAJ,CAAWC,GAAZ,CAAN,CAAuBf,qBAAvB,CAA6C,CAA7C;AACAT,MAAAA,MAAM,CAACD,GAAG,CAAC2B,iBAAL,CAAN,CAA8BjB,qBAA9B,CAAoD,CAApD;AACD,KAfG,CAAJ;AAiBAX,IAAAA,IAAI,CAAC,2CAAD,EAA8C,MAAM;AACtD,YAAMC,GAAG,GAAGV,KAAK,EAAjB;AACAU,MAAAA,GAAG,CAACW,aAAJ,GAAoBd,IAAI,CAACU,EAAL,EAApB;AACAP,MAAAA,GAAG,CAACQ,MAAJ,CAAWe,MAAX,GAAoB1B,IAAI,CAACU,EAAL,CAAQ,CAACgB,MAAD,EAASK,QAAT,KAAsB;AAChD,YAAIL,MAAM,IAAI,OAAd,EAAuBK,QAAQ,CAAC,OAAD,CAAR;AACxB,OAFmB,CAApB;AAGA5B,MAAAA,GAAG,CAACwB,MAAJ,CAAWC,GAAX,GAAiB5B,IAAI,CAACU,EAAL,CAASmB,GAAD,IAAS;AAChC,YAAIA,GAAG,IAAI,eAAX,EAA4B,OAAO,OAAP;AAC7B,OAFgB,CAAjB;AAGA1B,MAAAA,GAAG,CAACuB,MAAJ;AACAtB,MAAAA,MAAM,CAACD,GAAG,CAACQ,MAAJ,CAAWe,MAAZ,CAAN,CAA0Bb,qBAA1B,CAAgD,CAAhD;AACAT,MAAAA,MAAM,CAACD,GAAG,CAACwB,MAAJ,CAAWC,GAAZ,CAAN,CAAuBf,qBAAvB,CAA6C,CAA7C;AACAT,MAAAA,MAAM,CAACD,GAAG,CAACW,aAAL,CAAN,CAA0BD,qBAA1B,CAAgD,CAAhD;AACD,KAbG,CAAJ;AAeAX,IAAAA,IAAI,CAAC,6DAAD,EAAgE,MAAM;AACxEL,MAAAA,OAAO,CAACC,GAAR,CAAYkC,oBAAZ,GAAmC,IAAnC;AACA,YAAM7B,GAAG,GAAGV,KAAK,EAAjB;AACAU,MAAAA,GAAG,CAACQ,MAAJ,CAAWe,MAAX,GAAoB1B,IAAI,CAACU,EAAL,CAAQ,CAACgB,MAAD,EAASK,QAAT,KAAsB;AAChD,YAAIL,MAAM,IAAI,OAAd,EAAuBK,QAAQ;AAChC,OAFmB,CAApB;AAGA5B,MAAAA,GAAG,CAACwB,MAAJ,CAAWC,GAAX,GAAiB5B,IAAI,CAACU,EAAL,CAASmB,GAAD,IAAS;AAChC,YAAIA,GAAG,IAAI,eAAX,EAA4B,OAAO,OAAP;AAC7B,OAFgB,CAAjB;AAGA1B,MAAAA,GAAG,CAACuB,MAAJ;AACAtB,MAAAA,MAAM,CAACD,GAAG,CAACQ,MAAJ,CAAWe,MAAZ,CAAN,CAA0Bb,qBAA1B,CAAgD,CAAhD;AACAT,MAAAA,MAAM,CAACD,GAAG,CAACwB,MAAJ,CAAWC,GAAZ,CAAN,CAAuBf,qBAAvB,CAA6C,CAA7C;AACD,KAZG,CAAJ;AAcAX,IAAAA,IAAI,CAAC,8DAAD,EAAiE,MAAM;AACzEL,MAAAA,OAAO,CAACC,GAAR,CAAYkC,oBAAZ,GAAmC,KAAnC;AACA,YAAM7B,GAAG,GAAGV,KAAK,EAAjB;AACAU,MAAAA,GAAG,CAAC2B,iBAAJ,GAAwB9B,IAAI,CAACU,EAAL,EAAxB;AACAP,MAAAA,GAAG,CAACQ,MAAJ,CAAWe,MAAX,GAAoB1B,IAAI,CAACU,EAAL,CAAQ,CAACgB,MAAD,EAASK,QAAT,KAAsB;AAChD,YAAIL,MAAM,IAAI,OAAd,EAAuBK,QAAQ;AAChC,OAFmB,CAApB;AAGA5B,MAAAA,GAAG,CAACwB,MAAJ,CAAWC,GAAX,GAAiB5B,IAAI,CAACU,EAAL,CAASmB,GAAD,IAAS;AAChC,YAAIA,GAAG,IAAI,eAAX,EAA4B,OAAO,OAAP;AAC7B,OAFgB,CAAjB;AAGA1B,MAAAA,GAAG,CAACuB,MAAJ;AACAtB,MAAAA,MAAM,CAACD,GAAG,CAACQ,MAAJ,CAAWe,MAAZ,CAAN,CAA0Bb,qBAA1B,CAAgD,CAAhD;AACAT,MAAAA,MAAM,CAACD,GAAG,CAACwB,MAAJ,CAAWC,GAAZ,CAAN,CAAuBf,qBAAvB,CAA6C,CAA7C;AACAT,MAAAA,MAAM,CAACD,GAAG,CAAC2B,iBAAL,CAAN,CAA8BjB,qBAA9B,CAAoD,CAApD;AACD,KAdG,CAAJ;AAeD,GAhFO,CAAR;AAkFAlB,EAAAA,QAAQ,CAAC,mBAAD,EAAsB,MAAM;AAClCO,IAAAA,IAAI,CAAC,6BAAD,EAAgC,MAAM;AACxC,YAAMC,GAAG,GAAGV,KAAK,EAAjB;AACA,YAAMyB,IAAI,GAAG;AACXC,QAAAA,aAAa,EAAE,WADJ;AAEXC,QAAAA,UAAU,EAAE,IAFD;AAGXC,QAAAA,EAAE,EAAErB,IAAI,CAACU,EAAL,CAAQ,CAACuB,IAAD,EAAOF,QAAP,KAAoB;AAC9B,cAAIE,IAAI,IAAI,OAAZ,EAAqB;AACnBF,YAAAA,QAAQ;AACT;AACF,SAJG;AAHO,OAAb;;AASA5B,MAAAA,GAAG,CAACQ,MAAJ,CAAWC,OAAX,CAAmBa,UAAnB,CAA8B,CAA9B,EAAiCP,IAAjC;;AACAd,MAAAA,MAAM,CAACc,IAAI,CAACG,EAAN,CAAN,CAAgBR,qBAAhB,CAAsC,CAAtC;AACD,KAbG,CAAJ;AAcD,GAfO,CAAR;AAiBAlB,EAAAA,QAAQ,CAAC,gBAAD,EAAmB,MAAM;AAC/BO,IAAAA,IAAI,CAAC,uDAAD,EAA0D,YAAY;AACxE,YAAMC,GAAG,GAAGV,KAAK,EAAjB;AACAU,MAAAA,GAAG,CAAC+B,IAAJ,GAAWlC,IAAI,CAACU,EAAL,EAAX;AACAP,MAAAA,GAAG,CAACK,GAAJ,CAAQC,KAAR,GAAgBT,IAAI,CAACU,EAAL,EAAhB;AACAP,MAAAA,GAAG,CAACW,aAAJ,CAAkB,OAAlB,EAA2B,eAA3B;AACAV,MAAAA,MAAM,CAACD,GAAG,CAAC+B,IAAL,CAAN,CAAiBrB,qBAAjB,CAAuC,CAAvC;AACAT,MAAAA,MAAM,CAACD,GAAG,CAACK,GAAJ,CAAQC,KAAT,CAAN,CAAsBI,qBAAtB,CAA4C,CAA5C;AACD,KAPG,CAAJ;AASAX,IAAAA,IAAI,CAAC,qEAAD,EAAwE,YAAY;AACtF,YAAMC,GAAG,GAAGV,KAAK,EAAjB;AACAU,MAAAA,GAAG,CAAC+B,IAAJ,GAAWlC,IAAI,CAACU,EAAL,EAAX;AACAP,MAAAA,GAAG,CAACK,GAAJ,CAAQC,KAAR,GAAgBT,IAAI,CAACU,EAAL,EAAhB;AACAP,MAAAA,GAAG,CAACW,aAAJ,CAAkB,OAAlB;AACAV,MAAAA,MAAM,CAACD,GAAG,CAAC+B,IAAL,CAAN,CAAiBrB,qBAAjB,CAAuC,CAAvC;AACAT,MAAAA,MAAM,CAACD,GAAG,CAACK,GAAJ,CAAQC,KAAT,CAAN,CAAsBI,qBAAtB,CAA4C,CAA5C;AACD,KAPG,CAAJ;AAQD,GAlBO,CAAR;AAoBAlB,EAAAA,QAAQ,CAAC,UAAD,EAAa,MAAM;AACzBO,IAAAA,IAAI,CAAC,2BAAD,EAA8B,YAAY;AAC5C,YAAMC,GAAG,GAAGV,KAAK,EAAjB;AACAI,MAAAA,OAAO,CAACsC,IAAR,GAAenC,IAAI,CAACU,EAAL,EAAf;AACAP,MAAAA,GAAG,CAAC+B,IAAJ;AACA9B,MAAAA,MAAM,CAACP,OAAO,CAACsC,IAAT,CAAN,CAAqBtB,qBAArB,CAA2C,CAA3C;AACD,KALG,CAAJ;AAOAX,IAAAA,IAAI,CAAC,yEAAD,EAA4E,YAAY;AAC1F,YAAMC,GAAG,GAAGV,KAAK,EAAjB;AACA,aAAOU,GAAG,CAACQ,MAAJ,CAAWW,OAAlB;AACAzB,MAAAA,OAAO,CAACsC,IAAR,GAAenC,IAAI,CAACU,EAAL,EAAf;AACAP,MAAAA,GAAG,CAAC+B,IAAJ;AACA9B,MAAAA,MAAM,CAACP,OAAO,CAACsC,IAAT,CAAN,CAAqBtB,qBAArB,CAA2C,CAA3C;AACD,KANG,CAAJ;AAOD,GAfO,CAAR;AAiBAlB,EAAAA,QAAQ,CAAC,WAAD,EAAc,MAAM;AAC1BO,IAAAA,IAAI,CAAC,4BAAD,EAA+B,YAAY;AAC7C,YAAMC,GAAG,GAAGV,KAAK,EAAjB;AACA,YAAMwB,EAAE,GAAGjB,IAAI,CAACU,EAAL,EAAX;AACAP,MAAAA,GAAG,CAACiC,IAAJ,GAAWpC,IAAI,CAACU,EAAL,EAAX;AACAP,MAAAA,GAAG,CAACuB,MAAJ,GAAa1B,IAAI,CAACU,EAAL,EAAb;AACA,YAAMP,GAAG,CAACkC,KAAJ,CAAUpB,EAAV,CAAN;AACAb,MAAAA,MAAM,CAACD,GAAG,CAACiC,IAAL,CAAN,CAAiBvB,qBAAjB,CAAuC,CAAvC;AACAT,MAAAA,MAAM,CAACD,GAAG,CAACuB,MAAL,CAAN,CAAmBb,qBAAnB,CAAyC,CAAzC;AACAT,MAAAA,MAAM,CAACD,GAAG,CAACuB,MAAL,CAAN,CAAmBY,oBAAnB,CAAwCrB,EAAxC;AACD,KATG,CAAJ;AAWAf,IAAAA,IAAI,CAAC,8CAAD,EAAiD,YAAY;AAC/D,YAAMC,GAAG,GAAGV,KAAK,EAAjB;AACA,YAAMwB,EAAE,GAAGjB,IAAI,CAACU,EAAL,EAAX;AACAP,MAAAA,GAAG,CAACuB,MAAJ,GAAa1B,IAAI,CAACU,EAAL,EAAb;AACAP,MAAAA,GAAG,CAACoC,QAAJ,GAAe,IAAf;AACA,YAAMpC,GAAG,CAACkC,KAAJ,CAAUpB,EAAV,CAAN;AACAb,MAAAA,MAAM,CAACD,GAAG,CAACuB,MAAL,CAAN,CAAmBb,qBAAnB,CAAyC,CAAzC;AACAT,MAAAA,MAAM,CAACD,GAAG,CAACuB,MAAL,CAAN,CAAmBY,oBAAnB,CAAwCrB,EAAxC;AACD,KARG,CAAJ;AAUAf,IAAAA,IAAI,CAAC,4CAAD,EAA+C,YAAY;AAC7D,YAAMC,GAAG,GAAGV,KAAK,EAAjB;AACA,YAAMwB,EAAE,GAAGjB,IAAI,CAACU,EAAL,EAAX;AACAP,MAAAA,GAAG,CAACiC,IAAJ,GAAWpC,IAAI,CAACU,EAAL,EAAX;AACAP,MAAAA,GAAG,CAACuB,MAAJ,GAAa1B,IAAI,CAACU,EAAL,CAAQ,MAAM;AACzB,cAAM,IAAI8B,KAAJ,CAAU,OAAV,CAAN;AACD,OAFY,CAAb;AAGArC,MAAAA,GAAG,CAACW,aAAJ,GAAoBd,IAAI,CAACU,EAAL,EAApB;AACA,YAAMP,GAAG,CAACkC,KAAJ,CAAUpB,EAAV,CAAN;AACAb,MAAAA,MAAM,CAACD,GAAG,CAACiC,IAAL,CAAN,CAAiBvB,qBAAjB,CAAuC,CAAvC;AACAT,MAAAA,MAAM,CAACD,GAAG,CAACuB,MAAL,CAAN,CAAmBb,qBAAnB,CAAyC,CAAzC;AACAT,MAAAA,MAAM,CAACD,GAAG,CAACW,aAAL,CAAN,CAA0BD,qBAA1B,CAAgD,CAAhD;AACAT,MAAAA,MAAM,CAACD,GAAG,CAACuB,MAAL,CAAN,CAAmBY,oBAAnB,CAAwCrB,EAAxC;AACD,KAbG,CAAJ;AAcD,GApCO,CAAR;AAsCAtB,EAAAA,QAAQ,CAAC,aAAD,EAAgB,MAAM;AAC5BO,IAAAA,IAAI,CAAC,8BAAD,EAAiC,YAAY;AAC/C,YAAMC,GAAG,GAAGV,KAAK,EAAjB;AACAU,MAAAA,GAAG,CAACsC,EAAJ,GAAS;AAAEnB,QAAAA,OAAO,EAAEtB,IAAI,CAACU,EAAL;AAAX,OAAT;AACAP,MAAAA,GAAG,CAACuC,OAAJ,GAAc;AAAEC,QAAAA,OAAO,EAAE;AAAErB,UAAAA,OAAO,EAAEtB,IAAI,CAACU,EAAL;AAAX,SAAX;AAAmCkC,QAAAA,OAAO,EAAE;AAA5C,OAAd;AACAzC,MAAAA,GAAG,CAAC0C,QAAJ,CAAaC,kBAAb,GAAkC9C,IAAI,CAACU,EAAL,EAAlC;AACAP,MAAAA,GAAG,CAAC4C,KAAJ,CAAUzB,OAAV,GAAoBtB,IAAI,CAACU,EAAL,EAApB;AACA,YAAMP,GAAG,CAACmB,OAAJ,EAAN;AACAlB,MAAAA,MAAM,CAACD,GAAG,CAAC4C,KAAJ,CAAUzB,OAAX,CAAN,CAA0BT,qBAA1B,CAAgD,CAAhD;AACAT,MAAAA,MAAM,CAACD,GAAG,CAACsC,EAAJ,CAAOnB,OAAR,CAAN,CAAuBT,qBAAvB,CAA6C,CAA7C;AACAT,MAAAA,MAAM,CAACD,GAAG,CAACuC,OAAJ,CAAYC,OAAZ,CAAoBrB,OAArB,CAAN,CAAoCT,qBAApC,CAA0D,CAA1D;AACD,KAVG,CAAJ;AAYAX,IAAAA,IAAI,CAAC,2CAAD,EAA8C,YAAY;AAC5D,YAAMC,GAAG,GAAGV,KAAK,EAAjB;AACAU,MAAAA,GAAG,CAACuC,OAAJ,GAAc;AAAEC,QAAAA,OAAO,EAAE;AAAErB,UAAAA,OAAO,EAAEtB,IAAI,CAACU,EAAL;AAAX,SAAX;AAAmCkC,QAAAA,OAAO,EAAE;AAA5C,OAAd;AACAzC,MAAAA,GAAG,CAAC0C,QAAJ,CAAaC,kBAAb,GAAkC9C,IAAI,CAACU,EAAL,EAAlC;AACA,aAAOP,GAAG,CAACQ,MAAJ,CAAWW,OAAlB;AACA,aAAOnB,GAAG,CAAC4C,KAAX;AACA,YAAM5C,GAAG,CAACmB,OAAJ,EAAN;AACAlB,MAAAA,MAAM,CAACD,GAAG,CAACuC,OAAJ,CAAYC,OAAZ,CAAoBrB,OAArB,CAAN,CAAoCT,qBAApC,CAA0D,CAA1D;AACD,KARG,CAAJ;AASD,GAtBO,CAAR;AAwBAlB,EAAAA,QAAQ,CAAC,UAAD,EAAa,MAAM;AACzBO,IAAAA,IAAI,CAAC,2BAAD,EAA8B,YAAY;AAC5C,YAAMC,GAAG,GAAGV,KAAK,EAAjB;AACAU,MAAAA,GAAG,CAACA,GAAJ,GAAU;AAAE6C,QAAAA,GAAG,EAAEhD,IAAI,CAACU,EAAL;AAAP,OAAV;AACA,YAAMP,GAAG,CAACiC,IAAJ,EAAN;AACAhC,MAAAA,MAAM,CAACD,GAAG,CAACA,GAAJ,CAAQ6C,GAAT,CAAN,CAAoBC,gBAApB;AACD,KALG,CAAJ;AAOA/C,IAAAA,IAAI,CAAC,yCAAD,EAA4C,YAAY;AAC1DL,MAAAA,OAAO,CAACC,GAAR,CAAYoD,QAAZ,GAAuB,aAAvB;AACA,YAAM/C,GAAG,GAAGV,KAAK,EAAjB;AACAU,MAAAA,GAAG,CAACA,GAAJ,GAAU;AAAE6C,QAAAA,GAAG,EAAEhD,IAAI,CAACU,EAAL;AAAP,OAAV;AACA,YAAMP,GAAG,CAACiC,IAAJ,EAAN;AACAhC,MAAAA,MAAM,CAACD,GAAG,CAACA,GAAJ,CAAQ6C,GAAT,CAAN,CAAoBC,gBAApB;AACD,KANG,CAAJ;AAOD,GAfO,CAAR;AAiBA/C,EAAAA,IAAI,CAAC,qDAAD,EAAwD,YAAY;AACtE,UAAMC,GAAG,GAAGV,KAAK,EAAjB;AACA,UAAM0D,GAAG,GAAG,EAAZ;AACA,UAAMC,GAAG,GAAG;AAAEC,MAAAA,MAAM,EAAErD,IAAI,CAACU,EAAL;AAAV,KAAZ;AACA,UAAM4C,IAAI,GAAGtD,IAAI,CAACU,EAAL,EAAb;AACA,UAAMP,GAAG,CAACoD,MAAJ,CAAWJ,GAAX,EAAgBC,GAAhB,EAAqBE,IAArB,CAAN;AACAlD,IAAAA,MAAM,CAACkD,IAAD,CAAN,CAAazC,qBAAb,CAAmC,CAAnC;AACD,GAPG,CAAJ;AASAX,EAAAA,IAAI,CAAC,mDAAD,EAAsD,YAAY;AACpE,UAAMC,GAAG,GAAGV,KAAK,EAAjB;AACA,UAAM0D,GAAG,GAAG;AAAEK,MAAAA,GAAG,EAAE,UAAP;AAAmBC,MAAAA,MAAM,EAAE;AAA3B,KAAZ;AACA,UAAML,GAAG,GAAG;AAAEC,MAAAA,MAAM,EAAErD,IAAI,CAACU,EAAL,GAAUgD,kBAAV,CAA8BL,MAAD,IAAYA,MAAzC;AAAV,KAAZ;AACA,UAAMC,IAAI,GAAGtD,IAAI,CAACU,EAAL,EAAb;AACA,UAAMiD,IAAI,GAAG,MAAMxD,GAAG,CAACoD,MAAJ,CAAWJ,GAAX,EAAgBC,GAAhB,EAAqBE,IAArB,CAAnB;AACAlD,IAAAA,MAAM,CAACuD,IAAD,CAAN,CAAaC,IAAb,CAAkB,GAAlB;AACAxD,IAAAA,MAAM,CAACgD,GAAG,CAACC,MAAL,CAAN,CAAmBxC,qBAAnB,CAAyC,CAAzC;AACD,GARG,CAAJ;AAUAX,EAAAA,IAAI,CAAC,wDAAD,EAA2D,YAAY;AACzE,UAAMC,GAAG,GAAGV,KAAK,EAAjB;AACA,UAAMoE,GAAG,GAAG,EAAZ;AACA,UAAMV,GAAG,GAAG,EAAZ;AACA,UAAMC,GAAG,GAAG;AACVC,MAAAA,MAAM,EAAErD,IAAI,CAACU,EAAL,GAAUgD,kBAAV,CAA8BL,MAAD,KAAa;AAChDS,QAAAA,IAAI,EAAE9D,IAAI,CAACU,EAAL,GAAUgD,kBAAV,CAA8BK,OAAD,IAAaA,OAA1C;AAD0C,OAAb,CAA7B;AADE,KAAZ;AAKA5D,IAAAA,GAAG,CAAC6D,WAAJ,CAAgBH,GAAhB,EAAqBV,GAArB,EAA0BC,GAA1B;AACAhD,IAAAA,MAAM,CAACgD,GAAG,CAACC,MAAL,CAAN,CAAmBxC,qBAAnB,CAAyC,CAAzC;AACD,GAXG,CAAJ;AAaAX,EAAAA,IAAI,CAAC,wCAAD,EAA2C,YAAY;AACzD,UAAMC,GAAG,GAAGV,KAAK,EAAjB;AACAU,IAAAA,GAAG,CAAC2B,iBAAJ;AACD,GAHG,CAAJ;AAKAnC,EAAAA,QAAQ,CAAC,yBAAD,EAA4B,MAAM;AACxCO,IAAAA,IAAI,CAAC,uCAAD,EAA0C,YAAY;AACxD,YAAMC,GAAG,GAAGV,KAAK,EAAjB;AACAU,MAAAA,GAAG,CAACuC,OAAJ,GAAc;AACZuB,QAAAA,KAAK,EAAE;AAAEtC,UAAAA,MAAM,EAAE;AAAEuC,YAAAA,SAAS,EAAE;AAAEC,cAAAA,SAAS,EAAE;AAAb;AAAb;AAAV;AADK,OAAd;AAIA,YAAMhE,GAAG,CAACiE,qBAAJ,EAAN;AACD,KAPG,CAAJ;AASAlE,IAAAA,IAAI,CAAC,uCAAD,EAA0C,YAAY;AACxD,YAAMC,GAAG,GAAGV,KAAK,EAAjB;AACAU,MAAAA,GAAG,CAAC+B,IAAJ,GAAWlC,IAAI,CAACU,EAAL,EAAX;AACAP,MAAAA,GAAG,CAACuC,OAAJ,GAAc;AACZuB,QAAAA,KAAK,EAAE;AAAEtC,UAAAA,MAAM,EAAE;AAAEuC,YAAAA,SAAS,EAAE;AAAEC,cAAAA,SAAS,EAAE;AAAb;AAAb;AAAV;AADK,OAAd;AAIA,YAAMhE,GAAG,CAACiE,qBAAJ,EAAN;AACAhE,MAAAA,MAAM,CAACD,GAAG,CAAC+B,IAAL,CAAN,CAAiBrB,qBAAjB,CAAuC,CAAvC;AACD,KATG,CAAJ;AAUD,GApBO,CAAR;AAsBAX,EAAAA,IAAI,CAAC,6BAAD,EAAgC,MAAM;AACxC,UAAMC,GAAG,GAAGV,KAAK,EAAjB;AACAU,IAAAA,GAAG,CAACkE,MAAJ;AACD,GAHG,CAAJ;AAKA1E,EAAAA,QAAQ,CAAC,eAAD,EAAkB,MAAM;AAC9B,UAAMQ,GAAG,GAAGV,KAAK,EAAjB;AACAS,IAAAA,IAAI,CAAC,yBAAD,EAA4B,MAAM;AACpCC,MAAAA,GAAG,CAACsC,EAAJ,GAAS;AACP6B,QAAAA,QAAQ,EAAEtE,IAAI,CAACU,EAAL,CAAQ,MAAM,OAAd;AADH,OAAT;AAGAN,MAAAA,MAAM,CAACD,GAAG,CAACmE,QAAJ,EAAD,CAAN,CAAuBV,IAAvB,CAA4B,OAA5B;AACAxD,MAAAA,MAAM,CAACD,GAAG,CAACsC,EAAJ,CAAO6B,QAAR,CAAN,CAAwBzD,qBAAxB,CAA8C,CAA9C;AACD,KANG,CAAJ;AAQAX,IAAAA,IAAI,CAAC,qBAAD,EAAwB,MAAM;AAChCC,MAAAA,GAAG,CAACsC,EAAJ,GAAS;AACP8B,QAAAA,KAAK,EAAEvE,IAAI,CAACU,EAAL,CAAQ,MAAM,OAAd;AADA,OAAT;AAGAN,MAAAA,MAAM,CAACD,GAAG,CAACoE,KAAJ,EAAD,CAAN,CAAoBX,IAApB,CAAyB,OAAzB;AACAxD,MAAAA,MAAM,CAACD,GAAG,CAACsC,EAAJ,CAAO8B,KAAR,CAAN,CAAqB1D,qBAArB,CAA2C,CAA3C;AACD,KANG,CAAJ;AAOD,GAjBO,CAAR;AAkBD,CAnWO,CAAR","sourcesContent":["const sgApp = require('../App');\n\ndescribe('Init App', () => {\n  const OLD_ENV = process.env;\n\n  beforeEach(() => {\n    jest.resetModules();\n    process.env = { ...OLD_ENV };\n  });\n\n  test('Should initial App', () => {\n    const app = sgApp();\n    expect(Object.keys(app)).toEqual([\n      'app',\n      'router',\n      'server',\n      'log',\n      'dir',\n      'admin',\n      'plugins',\n      'config',\n      'isLoaded',\n      'fs',\n      'eventHub',\n    ]);\n  });\n\n  describe('InitServer error', () => {\n    test('Should initServer error', async () => {\n      const app = sgApp();\n      app.log.error = jest.fn(() => 'error');\n      app.server._events.error('error');\n      expect(app.log.error).toHaveBeenCalledTimes(1);\n    });\n\n    test('Should initServer error when the port is already used by another application.', async () => {\n      const app = sgApp();\n      app.stopWithError = jest.fn();\n      app.server._events.error({ code: 'EADDRINUSE', port: 4000 });\n      expect(app.stopWithError).toHaveBeenCalledTimes(1);\n    });\n\n    test('Should initServer, connect and destroy server.', async () => {\n      const cb = jest.fn();\n      const app = sgApp();\n      const conn = {\n        remoteAddress: 'localhost',\n        remotePort: 4000,\n        on: jest.fn(),\n        destroy: jest.fn(),\n      };\n      app.server.close = jest.fn();\n\n      app.initServer();\n      app.server._events.connection[1](conn);\n      app.server.destroy(cb);\n      expect(conn.destroy).toHaveBeenCalledTimes(1);\n    });\n  });\n\n  describe('Listen behaviors to the server', () => {\n    test('should call listen function, listen on port and host', () => {\n      const app = sgApp();\n      app.server.listen = jest.fn();\n      app.listen();\n      expect(app.server.listen).toHaveBeenCalledTimes(1);\n    });\n\n    test('should call listen function, listen on socket', () => {\n      const app = sgApp();\n      app.server.listen = jest.fn();\n      app.config.get = jest.fn((key) => {\n        if (key == 'server.socket') return 'server.socket';\n      });\n      app.listen();\n      expect(app.server.listen).toHaveBeenCalledTimes(1);\n      expect(app.config.get).toHaveBeenCalledTimes(1);\n    });\n\n    test('should call listenErrHandler', () => {\n      const cb = jest.fn();\n      const app = sgApp();\n      app.logStartupMessage = jest.fn();\n      app.server.listen = jest.fn((listen, callback) => {\n        if (listen == 'error') callback();\n      });\n      app.config.get = jest.fn((key) => {\n        if (key == 'server.socket') return 'error';\n      });\n      app.listen(cb);\n      expect(cb).toHaveBeenCalledTimes(1);\n      expect(app.server.listen).toHaveBeenCalledTimes(1);\n      expect(app.config.get).toHaveBeenCalledTimes(1);\n      expect(app.logStartupMessage).toHaveBeenCalledTimes(1);\n    });\n\n    test('should call listenErrHandler with a error', () => {\n      const app = sgApp();\n      app.stopWithError = jest.fn();\n      app.server.listen = jest.fn((listen, callback) => {\n        if (listen == 'error') callback('error');\n      });\n      app.config.get = jest.fn((key) => {\n        if (key == 'server.socket') return 'error';\n      });\n      app.listen();\n      expect(app.server.listen).toHaveBeenCalledTimes(1);\n      expect(app.config.get).toHaveBeenCalledTimes(1);\n      expect(app.stopWithError).toHaveBeenCalledTimes(1);\n    });\n\n    test('should call listenErrHandler with HIDE_STARTUP_MESSAGE=true', () => {\n      process.env.HIDE_STARTUP_MESSAGE = true;\n      const app = sgApp();\n      app.server.listen = jest.fn((listen, callback) => {\n        if (listen == 'error') callback();\n      });\n      app.config.get = jest.fn((key) => {\n        if (key == 'server.socket') return 'error';\n      });\n      app.listen();\n      expect(app.server.listen).toHaveBeenCalledTimes(1);\n      expect(app.config.get).toHaveBeenCalledTimes(1);\n    });\n\n    test('should call listenErrHandler with HIDE_STARTUP_MESSAGE=false', () => {\n      process.env.HIDE_STARTUP_MESSAGE = false;\n      const app = sgApp();\n      app.logStartupMessage = jest.fn();\n      app.server.listen = jest.fn((listen, callback) => {\n        if (listen == 'error') callback();\n      });\n      app.config.get = jest.fn((key) => {\n        if (key == 'server.socket') return 'error';\n      });\n      app.listen();\n      expect(app.server.listen).toHaveBeenCalledTimes(1);\n      expect(app.config.get).toHaveBeenCalledTimes(1);\n      expect(app.logStartupMessage).toHaveBeenCalledTimes(1);\n    });\n  });\n\n  describe('Server connection', () => {\n    test('should connection to server', () => {\n      const app = sgApp();\n      const conn = {\n        remoteAddress: 'localhost',\n        remotePort: 4000,\n        on: jest.fn((type, callback) => {\n          if (type == 'close') {\n            callback();\n          }\n        }),\n      };\n      app.server._events.connection[1](conn);\n      expect(conn.on).toHaveBeenCalledTimes(1);\n    });\n  });\n\n  describe('Stop WithError', () => {\n    test('Should call stopWithError function with customMessage', async () => {\n      const app = sgApp();\n      app.stop = jest.fn();\n      app.log.error = jest.fn();\n      app.stopWithError('error', 'customMessage');\n      expect(app.stop).toHaveBeenCalledTimes(1);\n      expect(app.log.error).toHaveBeenCalledTimes(2);\n    });\n\n    test('Should call stopWithError function with does not have customMessage', async () => {\n      const app = sgApp();\n      app.stop = jest.fn();\n      app.log.error = jest.fn();\n      app.stopWithError('error');\n      expect(app.stop).toHaveBeenCalledTimes(1);\n      expect(app.log.error).toHaveBeenCalledTimes(1);\n    });\n  });\n\n  describe('Stop app', () => {\n    test('Should call stop function', async () => {\n      const app = sgApp();\n      process.exit = jest.fn();\n      app.stop();\n      expect(process.exit).toHaveBeenCalledTimes(1);\n    });\n\n    test('Should call stop function in case does not have server destroy function', async () => {\n      const app = sgApp();\n      delete app.server.destroy;\n      process.exit = jest.fn();\n      app.stop();\n      expect(process.exit).toHaveBeenCalledTimes(1);\n    });\n  });\n\n  describe('Start app', () => {\n    test('Should call start function', async () => {\n      const app = sgApp();\n      const cb = jest.fn();\n      app.load = jest.fn();\n      app.listen = jest.fn();\n      await app.start(cb);\n      expect(app.load).toHaveBeenCalledTimes(1);\n      expect(app.listen).toHaveBeenCalledTimes(1);\n      expect(app.listen).toHaveBeenCalledWith(cb);\n    });\n\n    test('Should call start function and not call load', async () => {\n      const app = sgApp();\n      const cb = jest.fn();\n      app.listen = jest.fn();\n      app.isLoaded = true;\n      await app.start(cb);\n      expect(app.listen).toHaveBeenCalledTimes(1);\n      expect(app.listen).toHaveBeenCalledWith(cb);\n    });\n\n    test('Should call start function and throw error', async () => {\n      const app = sgApp();\n      const cb = jest.fn();\n      app.load = jest.fn();\n      app.listen = jest.fn(() => {\n        throw new Error('error');\n      });\n      app.stopWithError = jest.fn();\n      await app.start(cb);\n      expect(app.load).toHaveBeenCalledTimes(1);\n      expect(app.listen).toHaveBeenCalledTimes(1);\n      expect(app.stopWithError).toHaveBeenCalledTimes(1);\n      expect(app.listen).toHaveBeenCalledWith(cb);\n    });\n  });\n\n  describe('Destroy app', () => {\n    test('Should call destroy function', async () => {\n      const app = sgApp();\n      app.db = { destroy: jest.fn() };\n      app.plugins = { plugin1: { destroy: jest.fn() }, plugin2: {} };\n      app.eventHub.removeAllListeners = jest.fn();\n      app.admin.destroy = jest.fn();\n      await app.destroy();\n      expect(app.admin.destroy).toHaveBeenCalledTimes(1);\n      expect(app.db.destroy).toHaveBeenCalledTimes(1);\n      expect(app.plugins.plugin1.destroy).toHaveBeenCalledTimes(1);\n    });\n\n    test('Should call destroy function in case else', async () => {\n      const app = sgApp();\n      app.plugins = { plugin1: { destroy: jest.fn() }, plugin2: {} };\n      app.eventHub.removeAllListeners = jest.fn();\n      delete app.server.destroy;\n      delete app.admin;\n      await app.destroy();\n      expect(app.plugins.plugin1.destroy).toHaveBeenCalledTimes(1);\n    });\n  });\n\n  describe('Load App', () => {\n    test('Should call load function', async () => {\n      const app = sgApp();\n      app.app = { use: jest.fn() };\n      await app.load();\n      expect(app.app.use).toHaveBeenCalled();\n    });\n\n    test('Should call load function with mode dev', async () => {\n      process.env.NODE_ENV = 'development';\n      const app = sgApp();\n      app.app = { use: jest.fn() };\n      await app.load();\n      expect(app.app.use).toHaveBeenCalled();\n    });\n  });\n\n  test('should call health function and go to next function', async () => {\n    const app = sgApp();\n    const req = {};\n    const res = { status: jest.fn() };\n    const next = jest.fn();\n    await app.health(req, res, next);\n    expect(next).toHaveBeenCalledTimes(1);\n  });\n\n  test('should call health function and return status 204', async () => {\n    const app = sgApp();\n    const req = { url: '/_health', method: 'HEAD' };\n    const res = { status: jest.fn().mockImplementation((status) => status) };\n    const next = jest.fn();\n    const resp = await app.health(req, res, next);\n    expect(resp).toBe(204);\n    expect(res.status).toHaveBeenCalledTimes(1);\n  });\n\n  test('should call serverError function and return status 500', async () => {\n    const app = sgApp();\n    const err = {};\n    const req = {};\n    const res = {\n      status: jest.fn().mockImplementation((status) => ({\n        send: jest.fn().mockImplementation((message) => message),\n      })),\n    };\n    app.serverError(err, req, res);\n    expect(res.status).toHaveBeenCalledTimes(1);\n  });\n\n  test('Should call logStartupMessage function', async () => {\n    const app = sgApp();\n    app.logStartupMessage();\n  });\n\n  describe('Run Bootstrap Functions', () => {\n    test('should execBootstrap return undefined', async () => {\n      const app = sgApp();\n      app.plugins = {\n        email: { config: { functions: { bootstrap: null } } },\n      };\n\n      await app.runBootstrapFunctions();\n    });\n\n    test('should run Bootstrap function is fail', async () => {\n      const app = sgApp();\n      app.stop = jest.fn();\n      app.plugins = {\n        email: { config: { functions: { bootstrap: 'bootstrap' } } },\n      };\n\n      await app.runBootstrapFunctions();\n      expect(app.stop).toHaveBeenCalledTimes(1);\n    });\n  });\n\n  test('should call freeze function', () => {\n    const app = sgApp();\n    app.freeze();\n  });\n\n  describe('Call database', () => {\n    const app = sgApp();\n    test('should return get model', () => {\n      app.db = {\n        getModel: jest.fn(() => 'model'),\n      };\n      expect(app.getModel()).toBe('model');\n      expect(app.db.getModel).toHaveBeenCalledTimes(1);\n    });\n\n    test('should return query', () => {\n      app.db = {\n        query: jest.fn(() => 'query'),\n      };\n      expect(app.query()).toBe('query');\n      expect(app.db.query).toHaveBeenCalledTimes(1);\n    });\n  });\n});\n"]}