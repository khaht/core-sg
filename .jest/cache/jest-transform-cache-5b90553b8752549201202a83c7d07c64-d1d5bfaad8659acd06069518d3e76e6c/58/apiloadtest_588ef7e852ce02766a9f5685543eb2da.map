{"version":3,"sources":["api.load.test.js"],"names":["path","require","fse","apiLoad","_","describe","test","dir","catch","e","expect","message","toEqual","names","paths","readdirSync","resolve","process","cwd","withFileTypes","fd","name","push","resp","Object","keys"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,UAAD,CAAnB;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAC,aAAD,CAAvB;;AACA,MAAMG,CAAC,GAAGH,OAAO,CAAC,QAAD,CAAjB;;AAEAI,QAAQ,CAAC,UAAD,EAAa,MAAM;AACzBC,EAAAA,IAAI,CAAC,wCAAD,EAA2C,YAAY;AACzD,UAAMH,OAAO,CAAC;AAAEI,MAAAA,GAAG,EAAE;AAAP,KAAD,CAAP,CAAyBC,KAAzB,CAAgCC,CAAD,IACnCC,MAAM,CAACD,CAAC,CAACE,OAAH,CAAN,CAAkBC,OAAlB,CACE,wEADF,CADI,CAAN;AAKD,GANG,CAAJ;AAQAN,EAAAA,IAAI,CAAC,wBAAD,EAA2B,YAAY;AACzC,UAAMO,KAAK,GAAG,EAAd;AACA,UAAMC,KAAK,GAAGZ,GAAG,CAACa,WAAJ,CAAgBf,IAAI,CAACgB,OAAL,CAAaC,OAAO,CAACC,GAAR,EAAb,EAA4B,SAA5B,CAAhB,EAAwD;AACpEC,MAAAA,aAAa,EAAE;AADqD,KAAxD,CAAd;;AAGA,SAAK,IAAIC,EAAT,IAAeN,KAAf,EAAsB;AACpBM,MAAAA,EAAE,CAACC,IAAH,KAAY,WAAZ,GAA0BR,KAAK,CAACS,IAAN,CAAWF,EAAE,CAACC,IAAd,CAA1B,GAAgD,IAAhD;AACD;;AACD,UAAME,IAAI,GAAG,MAAMpB,OAAO,CAAC;AAAEI,MAAAA,GAAG,EAAEU,OAAO,CAACC,GAAR;AAAP,KAAD,CAA1B;AACAR,IAAAA,MAAM,CAACc,MAAM,CAACC,IAAP,CAAYF,IAAZ,CAAD,CAAN,CAA0BX,OAA1B,CAAkCC,KAAlC;AACD,GAVG,CAAJ;AAWD,CApBO,CAAR","sourcesContent":["const path = require('path');\nconst fse = require('fs-extra');\nconst apiLoad = require('../api.load');\nconst _ = require('lodash');\n\ndescribe('API load', () => {\n  test('Should throw error if not exist module', async () => {\n    await apiLoad({ dir: 'test' }).catch((e) =>\n      expect(e.message).toEqual(\n        \"Missing 'modules' folder. Please create one in your app root directory\"\n      )\n    );\n  });\n\n  test('Should return api load', async () => {\n    const names = [];\n    const paths = fse.readdirSync(path.resolve(process.cwd(), 'modules'), {\n      withFileTypes: true,\n    });\n    for (let fd of paths) {\n      fd.name !== '__tests__' ? names.push(fd.name) : null;\n    }\n    const resp = await apiLoad({ dir: process.cwd() });\n    expect(Object.keys(resp)).toEqual(names);\n  });\n});\n"]}