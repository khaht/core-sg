854aa9800b57d9af8d2e38d897f75db2
const boom = require('../boom');

const lodash = require('lodash');

describe('Handler error', () => {
  const app = {
    use: jest.fn()
  };
  const {
    initialize,
    handlerError
  } = boom({
    app
  });
  test('Should init handler error', () => {
    expect(initialize).toBeDefined();
    expect(typeof initialize).toBe('function');
    expect(handlerError).toBeDefined();
    expect(typeof handlerError).toBe('function');
  });
  test('Should call initialize', () => {
    initialize();
    expect(app.use).toHaveBeenCalledTimes(1);
  });
  test('Should add error to response object and call next function', () => {
    lodash.isObject = jest.fn(() => true);
    const req = {};
    const res = {};
    const next = jest.fn();
    handlerError(req, res, next);
    expect(next).toHaveBeenCalledTimes(1);
  });
  test('Should call next function', () => {
    lodash.isObject = jest.fn(() => false);
    const req = {};
    const res = {};
    const next = jest.fn();
    handlerError(req, res, next);
    expect(next).toHaveBeenCalledTimes(1);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJvb20uaW5kZXgudGVzdC5qcyJdLCJuYW1lcyI6WyJib29tIiwicmVxdWlyZSIsImxvZGFzaCIsImRlc2NyaWJlIiwiYXBwIiwidXNlIiwiamVzdCIsImZuIiwiaW5pdGlhbGl6ZSIsImhhbmRsZXJFcnJvciIsInRlc3QiLCJleHBlY3QiLCJ0b0JlRGVmaW5lZCIsInRvQmUiLCJ0b0hhdmVCZWVuQ2FsbGVkVGltZXMiLCJpc09iamVjdCIsInJlcSIsInJlcyIsIm5leHQiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBcEI7O0FBQ0EsTUFBTUMsTUFBTSxHQUFHRCxPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFFQUUsUUFBUSxDQUFDLGVBQUQsRUFBa0IsTUFBTTtBQUM5QixRQUFNQyxHQUFHLEdBQUc7QUFBRUMsSUFBQUEsR0FBRyxFQUFFQyxJQUFJLENBQUNDLEVBQUw7QUFBUCxHQUFaO0FBQ0EsUUFBTTtBQUFFQyxJQUFBQSxVQUFGO0FBQWNDLElBQUFBO0FBQWQsTUFBK0JULElBQUksQ0FBQztBQUFFSSxJQUFBQTtBQUFGLEdBQUQsQ0FBekM7QUFDQU0sRUFBQUEsSUFBSSxDQUFDLDJCQUFELEVBQThCLE1BQU07QUFDdENDLElBQUFBLE1BQU0sQ0FBQ0gsVUFBRCxDQUFOLENBQW1CSSxXQUFuQjtBQUNBRCxJQUFBQSxNQUFNLENBQUMsT0FBT0gsVUFBUixDQUFOLENBQTBCSyxJQUExQixDQUErQixVQUEvQjtBQUNBRixJQUFBQSxNQUFNLENBQUNGLFlBQUQsQ0FBTixDQUFxQkcsV0FBckI7QUFDQUQsSUFBQUEsTUFBTSxDQUFDLE9BQU9GLFlBQVIsQ0FBTixDQUE0QkksSUFBNUIsQ0FBaUMsVUFBakM7QUFDRCxHQUxHLENBQUo7QUFPQUgsRUFBQUEsSUFBSSxDQUFDLHdCQUFELEVBQTJCLE1BQU07QUFDbkNGLElBQUFBLFVBQVU7QUFDVkcsSUFBQUEsTUFBTSxDQUFDUCxHQUFHLENBQUNDLEdBQUwsQ0FBTixDQUFnQlMscUJBQWhCLENBQXNDLENBQXRDO0FBQ0QsR0FIRyxDQUFKO0FBS0FKLEVBQUFBLElBQUksQ0FBQyw0REFBRCxFQUErRCxNQUFNO0FBQ3ZFUixJQUFBQSxNQUFNLENBQUNhLFFBQVAsR0FBa0JULElBQUksQ0FBQ0MsRUFBTCxDQUFRLE1BQU0sSUFBZCxDQUFsQjtBQUNBLFVBQU1TLEdBQUcsR0FBRyxFQUFaO0FBQ0EsVUFBTUMsR0FBRyxHQUFHLEVBQVo7QUFDQSxVQUFNQyxJQUFJLEdBQUdaLElBQUksQ0FBQ0MsRUFBTCxFQUFiO0FBQ0FFLElBQUFBLFlBQVksQ0FBQ08sR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsQ0FBWjtBQUNBUCxJQUFBQSxNQUFNLENBQUNPLElBQUQsQ0FBTixDQUFhSixxQkFBYixDQUFtQyxDQUFuQztBQUNELEdBUEcsQ0FBSjtBQVNBSixFQUFBQSxJQUFJLENBQUMsMkJBQUQsRUFBOEIsTUFBTTtBQUN0Q1IsSUFBQUEsTUFBTSxDQUFDYSxRQUFQLEdBQWtCVCxJQUFJLENBQUNDLEVBQUwsQ0FBUSxNQUFNLEtBQWQsQ0FBbEI7QUFDQSxVQUFNUyxHQUFHLEdBQUcsRUFBWjtBQUNBLFVBQU1DLEdBQUcsR0FBRyxFQUFaO0FBQ0EsVUFBTUMsSUFBSSxHQUFHWixJQUFJLENBQUNDLEVBQUwsRUFBYjtBQUNBRSxJQUFBQSxZQUFZLENBQUNPLEdBQUQsRUFBTUMsR0FBTixFQUFXQyxJQUFYLENBQVo7QUFDQVAsSUFBQUEsTUFBTSxDQUFDTyxJQUFELENBQU4sQ0FBYUoscUJBQWIsQ0FBbUMsQ0FBbkM7QUFDRCxHQVBHLENBQUo7QUFRRCxDQWhDTyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYm9vbSA9IHJlcXVpcmUoJy4uL2Jvb20nKTtcbmNvbnN0IGxvZGFzaCA9IHJlcXVpcmUoJ2xvZGFzaCcpO1xuXG5kZXNjcmliZSgnSGFuZGxlciBlcnJvcicsICgpID0+IHtcbiAgY29uc3QgYXBwID0geyB1c2U6IGplc3QuZm4oKSB9O1xuICBjb25zdCB7IGluaXRpYWxpemUsIGhhbmRsZXJFcnJvciB9ID0gYm9vbSh7IGFwcCB9KTtcbiAgdGVzdCgnU2hvdWxkIGluaXQgaGFuZGxlciBlcnJvcicsICgpID0+IHtcbiAgICBleHBlY3QoaW5pdGlhbGl6ZSkudG9CZURlZmluZWQoKTtcbiAgICBleHBlY3QodHlwZW9mIGluaXRpYWxpemUpLnRvQmUoJ2Z1bmN0aW9uJyk7XG4gICAgZXhwZWN0KGhhbmRsZXJFcnJvcikudG9CZURlZmluZWQoKTtcbiAgICBleHBlY3QodHlwZW9mIGhhbmRsZXJFcnJvcikudG9CZSgnZnVuY3Rpb24nKTtcbiAgfSk7XG5cbiAgdGVzdCgnU2hvdWxkIGNhbGwgaW5pdGlhbGl6ZScsICgpID0+IHtcbiAgICBpbml0aWFsaXplKCk7XG4gICAgZXhwZWN0KGFwcC51c2UpLnRvSGF2ZUJlZW5DYWxsZWRUaW1lcygxKTtcbiAgfSk7XG5cbiAgdGVzdCgnU2hvdWxkIGFkZCBlcnJvciB0byByZXNwb25zZSBvYmplY3QgYW5kIGNhbGwgbmV4dCBmdW5jdGlvbicsICgpID0+IHtcbiAgICBsb2Rhc2guaXNPYmplY3QgPSBqZXN0LmZuKCgpID0+IHRydWUpO1xuICAgIGNvbnN0IHJlcSA9IHt9O1xuICAgIGNvbnN0IHJlcyA9IHt9O1xuICAgIGNvbnN0IG5leHQgPSBqZXN0LmZuKCk7XG4gICAgaGFuZGxlckVycm9yKHJlcSwgcmVzLCBuZXh0KTtcbiAgICBleHBlY3QobmV4dCkudG9IYXZlQmVlbkNhbGxlZFRpbWVzKDEpO1xuICB9KTtcblxuICB0ZXN0KCdTaG91bGQgY2FsbCBuZXh0IGZ1bmN0aW9uJywgKCkgPT4ge1xuICAgIGxvZGFzaC5pc09iamVjdCA9IGplc3QuZm4oKCkgPT4gZmFsc2UpO1xuICAgIGNvbnN0IHJlcSA9IHt9O1xuICAgIGNvbnN0IHJlcyA9IHt9O1xuICAgIGNvbnN0IG5leHQgPSBqZXN0LmZuKCk7XG4gICAgaGFuZGxlckVycm9yKHJlcSwgcmVzLCBuZXh0KTtcbiAgICBleHBlY3QobmV4dCkudG9IYXZlQmVlbkNhbGxlZFRpbWVzKDEpO1xuICB9KTtcbn0pO1xuIl19