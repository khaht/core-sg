{"version":3,"sources":["index.test.js"],"names":["middlewares","require","describe","config","middleware","timeout","load","before","order","after","settings","bodyParser","enabled","options","boom","cors","headers","origin","gzip","router","prefix","routes","auth","i18n","test","loaded","defaults","initialize","jest","fn","beforeInitialize","responsestatus","call","expect","toHaveBeenCalledTimes","Promise","reject","catch","e","toBe","res","setTimeout","message"],"mappings":"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","sourcesContent":["const middlewares = require('../index');\n\ndescribe('Middlewares', () => {\n  this.config = {\n    middleware: {\n      timeout: 1000,\n      load: {\n        before: ['responseTime', 'logger', 'cors', 'responses', 'gzip'],\n        order: [],\n        after: ['parser', 'router'],\n      },\n      settings: {\n        bodyParser: { enabled: true, options: {} },\n        boom: { enabled: false },\n        cors: {\n          headers: ['Content-Type', 'Authorization', 'Origin', 'Accept'],\n          origin: '*',\n          enabled: false,\n        },\n        gzip: { enabled: false, options: {} },\n        router: { enabled: true, prefix: '', routes: {} },\n        auth: { enabled: true },\n        'firebase-auth': { enabled: false },\n        'http-logger': { enabled: true },\n        i18n: { enabled: true },\n      },\n    },\n  };\n\n  test('Should load all middlewares', async () => {\n    this.middleware = {\n      bodyParser: {\n        loaded: false,\n        defaults: {\n          bodyParser: {\n            enabled: true,\n            options: {},\n          },\n        },\n        load: {\n          initialize: jest.fn(),\n          beforeInitialize: jest.fn()\n        },\n      },\n      boom: {\n        loaded: false,\n        defaults: {\n          responsestatus: {\n            enabled: true,\n            options: {},\n          },\n        },\n        load: {\n          initialize: jest.fn(),\n        },\n      },\n      cors: {\n        loaded: false,\n        load: {\n          initialize: jest.fn(),\n        },\n      },\n      gzip: {\n        loaded: false,\n        defaults: {\n          gzip: {\n            enabled: false,\n            options: {},\n          },\n        },\n        load: {\n          initialize: jest.fn(),\n        },\n      },\n      router: {\n        loaded: false,\n        defaults: {\n          router: {\n            enabled: true,\n            prefix: '',\n            routes: {},\n          },\n        },\n        load: {\n          initialize: jest.fn(),\n        },\n      },\n      auth: {\n        loaded: false,\n        defaults: {\n          auth: {\n            enabled: true,\n          },\n        },\n        load: {\n          initialize: jest.fn(),\n        },\n      },\n      'firebase-auth': {\n        loaded: false,\n        defaults: {\n          'firebase-auth': {\n            enabled: false,\n          },\n        },\n        load: {\n          initialize: jest.fn(),\n        },\n      },\n      'http-logger': {\n        loaded: false,\n        defaults: {\n          'http-logger': {\n            enabled: true,\n          },\n        },\n        load: {\n          initialize: jest.fn(),\n        },\n      },\n      i18n: {\n        loaded: false,\n        defaults: {\n          i18n: {\n            enabled: true,\n          },\n        },\n        load: {\n          initialize: jest.fn(),\n        },\n      },\n    };\n    await middlewares.call(this);\n    expect(this.middleware.bodyParser.load.initialize).toHaveBeenCalledTimes(1);\n    expect(this.middleware.boom.load.initialize).toHaveBeenCalledTimes(1);\n    expect(this.middleware.cors.load.initialize).toHaveBeenCalledTimes(1);\n    expect(this.middleware.router.load.initialize).toHaveBeenCalledTimes(1);\n    expect(this.middleware.auth.load.initialize).toHaveBeenCalledTimes(1);\n    expect(\n      this.middleware['http-logger'].load.initialize\n    ).toHaveBeenCalledTimes(1);\n    expect(this.middleware.i18n.load.initialize).toHaveBeenCalledTimes(1);\n  });\n\n  test('Should throw error if have exception', async () => {\n    this.middleware = {\n      i18n: {\n        loaded: false,\n        defaults: {\n          i18n: {\n            enabled: true,\n          },\n        },\n        load: {\n          initialize: jest.fn(() => Promise.reject('can not load i18n')),\n        },\n      },\n    };\n\n    await middlewares.call(this).catch((e) => {\n      expect(e).toBe('can not load i18n');\n    });\n  });\n\n  test('Should throw error if taking too long to load', async () => {\n    this.middleware = {\n      i18n: {\n        loaded: false,\n        defaults: {\n          i18n: {\n            enabled: true,\n          },\n        },\n        load: {\n          initialize: jest.fn(\n            async () =>\n              await new Promise((res) => setTimeout(() => res(true), 3000))\n          ),\n        },\n      },\n    };\n\n    await middlewares.call(this).catch((e) => {\n      expect(e.message).toBe(`(middleware: i18n) is taking too long to load.`);\n    });\n  });\n});\n"]}