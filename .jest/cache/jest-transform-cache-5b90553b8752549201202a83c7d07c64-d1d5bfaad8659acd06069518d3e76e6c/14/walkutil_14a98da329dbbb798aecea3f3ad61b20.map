{"version":3,"sources":["walk.util.js"],"names":["assert","require","path","fse","module","exports","walk","dir","loader","root","paths","readdirSync","withFileTypes","fd","name","fullPath","sep","isDirectory","ext","extname","key","basename"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,GAAG,GAAGF,OAAO,CAAC,UAAD,CAAnB;;AAEAG,MAAM,CAACC,OAAP,GAAiB,SAASC,IAAT,CAAcC,GAAd,EAAmB;AAAEC,EAAAA;AAAF,IAAa,EAAhC,EAAoC;AACnDR,EAAAA,MAAM,CAAC,OAAOQ,MAAP,KAAkB,UAAnB,EAA+B,gCAA/B,CAAN;AAEA,QAAMC,IAAI,GAAG,EAAb;AACA,QAAMC,KAAK,GAAGP,GAAG,CAACQ,WAAJ,CAAgBJ,GAAhB,EAAqB;AAAEK,IAAAA,aAAa,EAAE;AAAjB,GAArB,CAAd,CAJmD,CAMnD;;AACA,OAAK,IAAIC,EAAT,IAAeH,KAAf,EAAsB;AACpB,UAAM;AAAEI,MAAAA;AAAF,QAAWD,EAAjB;AACA,UAAME,QAAQ,GAAGR,GAAG,GAAGL,IAAI,CAACc,GAAX,GAAiBF,IAAlC;;AAEA,QAAID,EAAE,CAACI,WAAH,EAAJ,EAAsB;AACpBR,MAAAA,IAAI,CAACK,IAAD,CAAJ,GAAaR,IAAI,CAACS,QAAD,EAAW;AAAEP,QAAAA;AAAF,OAAX,CAAjB;AACD,KAFD,MAEO;AACL,YAAMU,GAAG,GAAGhB,IAAI,CAACiB,OAAL,CAAaL,IAAb,CAAZ;AACA,YAAMM,GAAG,GAAGlB,IAAI,CAACmB,QAAL,CAAcP,IAAd,EAAoBI,GAApB,CAAZ;AACAT,MAAAA,IAAI,CAACW,GAAD,CAAJ,GAAYZ,MAAM,CAACO,QAAD,CAAlB;AACD;AACF;;AAED,SAAON,IAAP;AACD,CArBD","sourcesContent":["const assert = require('assert');\nconst path = require('path');\nconst fse = require('fs-extra');\n\nmodule.exports = function walk(dir, { loader } = {}) {\n  assert(typeof loader === 'function', 'opts.loader must be a function');\n\n  const root = {};\n  const paths = fse.readdirSync(dir, { withFileTypes: true });\n\n  // eslint-disable-next-line\n  for (let fd of paths) {\n    const { name } = fd;\n    const fullPath = dir + path.sep + name;\n\n    if (fd.isDirectory()) {\n      root[name] = walk(fullPath, { loader });\n    } else {\n      const ext = path.extname(name);\n      const key = path.basename(name, ext);\n      root[key] = loader(fullPath);\n    }\n  }\n\n  return root;\n};\n"]}