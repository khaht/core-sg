{"version":3,"sources":["config.util.js"],"names":["_","require","getConfigUrls","serverConfig","serverUrl","get","trim","Error","startsWith","URL","url","toString","e","getAbsoluteUrl","adminOrServer","config","forAdminBuild","adminUrl","server","hostname","environment","includes","host","port","module","exports","getAbsoluteServerUrl"],"mappings":"AAAA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AAEA,MAAMC,aAAa,GAAIC,YAAD,IAAkB;AACtC;AACA,MAAIC,SAAS,GAAGJ,CAAC,CAACK,GAAF,CAAMF,YAAN,EAAoB,KAApB,EAA2B,EAA3B,CAAhB;;AACAC,EAAAA,SAAS,GAAGJ,CAAC,CAACM,IAAF,CAAOF,SAAP,EAAkB,IAAlB,CAAZ;;AACA,MAAI,OAAOA,SAAP,KAAqB,QAAzB,EAAmC;AACjC,UAAM,IAAIG,KAAJ,CACJ,2DADI,CAAN;AAGD;;AACD,MAAIH,SAAS,CAACI,UAAV,CAAqB,MAArB,CAAJ,EAAkC;AAChC,QAAI;AACFJ,MAAAA,SAAS,GAAGJ,CAAC,CAACM,IAAF,CAAO,IAAIG,GAAJ,CAAQN,YAAY,CAACO,GAArB,EAA0BC,QAA1B,EAAP,EAA6C,GAA7C,CAAZ;AACD,KAFD,CAEE,OAAOC,CAAP,EAAU;AACV,YAAM,IAAIL,KAAJ,CACJ,6EADI,CAAN;AAGD;AACF,GARD,MAQO,IAAIH,SAAS,KAAK,EAAlB,EAAsB;AAC3BA,IAAAA,SAAS,GAAI,IAAGA,SAAU,EAA1B;AACD;;AAED,SAAO;AACLA,IAAAA;AADK,GAAP;AAGD,CAxBD;;AA0BA,MAAMS,cAAc,GAAIC,aAAD,IAAmB,CAACC,MAAD,EAASC,aAAa,GAAG,KAAzB,KAAmC;AAC3E,QAAM;AAAEZ,IAAAA,SAAF;AAAaa,IAAAA;AAAb,MAA0Bf,aAAa,CAACa,MAAM,CAACG,MAAR,EAAgBF,aAAhB,CAA7C;AACA,QAAMN,GAAG,GAAGI,aAAa,KAAK,QAAlB,GAA6BV,SAA7B,GAAyCa,QAArD;;AAEA,MAAIP,GAAG,CAACF,UAAJ,CAAe,MAAf,CAAJ,EAA4B;AAC1B,WAAOE,GAAP;AACD;;AAED,QAAMS,QAAQ,GACZJ,MAAM,CAACK,WAAP,KAAuB,aAAvB,IACA,CAAC,WAAD,EAAc,SAAd,EAAyBC,QAAzB,CAAkCN,MAAM,CAACG,MAAP,CAAcI,IAAhD,CADA,GAEI,WAFJ,GAGIP,MAAM,CAACG,MAAP,CAAcI,IAJpB;AAMA,SAAQ,UAASH,QAAS,IAAGJ,MAAM,CAACG,MAAP,CAAcK,IAAK,GAAEb,GAAI,EAAtD;AACD,CAfD;;AAiBAc,MAAM,CAACC,OAAP,GAAiB;AACfvB,EAAAA,aADe;AAEfwB,EAAAA,oBAAoB,EAAEb,cAAc,CAAC,QAAD;AAFrB,CAAjB","sourcesContent":["const _ = require('lodash');\n\nconst getConfigUrls = (serverConfig) => {\n  // Defines serverUrl value\n  let serverUrl = _.get(serverConfig, 'url', '');\n  serverUrl = _.trim(serverUrl, '/ ');\n  if (typeof serverUrl !== 'string') {\n    throw new Error(\n      'Invalid server url config. Make sure the url is a string.'\n    );\n  }\n  if (serverUrl.startsWith('http')) {\n    try {\n      serverUrl = _.trim(new URL(serverConfig.url).toString(), '/');\n    } catch (e) {\n      throw new Error(\n        'Invalid server url config. Make sure the url defined in server.js is valid.'\n      );\n    }\n  } else if (serverUrl !== '') {\n    serverUrl = `/${serverUrl}`;\n  }\n\n  return {\n    serverUrl,\n  };\n};\n\nconst getAbsoluteUrl = (adminOrServer) => (config, forAdminBuild = false) => {\n  const { serverUrl, adminUrl } = getConfigUrls(config.server, forAdminBuild);\n  const url = adminOrServer === 'server' ? serverUrl : adminUrl;\n\n  if (url.startsWith('http')) {\n    return url;\n  }\n\n  const hostname =\n    config.environment === 'development' &&\n    ['127.0.0.1', '0.0.0.0'].includes(config.server.host)\n      ? 'localhost'\n      : config.server.host;\n\n  return `http://${hostname}:${config.server.port}${url}`;\n};\n\nmodule.exports = {\n  getConfigUrls,\n  getAbsoluteServerUrl: getAbsoluteUrl('server'),\n};\n"]}