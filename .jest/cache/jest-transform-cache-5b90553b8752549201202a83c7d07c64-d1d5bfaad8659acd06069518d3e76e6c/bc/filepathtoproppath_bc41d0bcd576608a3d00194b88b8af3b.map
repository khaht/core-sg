{"version":3,"sources":["filepath-to-prop-path.js"],"names":["_","require","module","exports","filePath","useFileNameAsKey","cleanPath","startsWith","slice","prop","replace","toLowerCase","split","map","p","trimStart","join"],"mappings":"AAAA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;AAEA;AACA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,CAACC,QAAD,EAAWC,gBAAgB,GAAG,IAA9B,KAAuC;AACtD,QAAMC,SAAS,GAAGF,QAAQ,CAACG,UAAT,CAAoB,IAApB,IAA4BH,QAAQ,CAACI,KAAT,CAAe,CAAf,CAA5B,GAAgDJ,QAAlE;AAEA,QAAMK,IAAI,GAAGH,SAAS,CACnBI,OADU,CACF,2BADE,EAC2B,EAD3B,EAEVC,WAFU,GAGVC,KAHU,CAGJ,GAHI,EAIVC,GAJU,CAILC,CAAD,IAAOd,CAAC,CAACe,SAAF,CAAYD,CAAZ,EAAe,GAAf,CAJD,EAKVE,IALU,CAKL,GALK,EAMVJ,KANU,CAMJ,GANI,CAAb;AAQA,SAAOP,gBAAgB,KAAK,IAArB,GAA4BI,IAA5B,GAAmCA,IAAI,CAACD,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,CAA1C;AACD,CAZD","sourcesContent":["const _ = require('lodash');\n\n/**\n * Returns a path (as an array) from a file path\n * @param {string} filePath - a file path\n * @param {boolean} useFileNameAsKey - wethear to skip the last path key\n */\nmodule.exports = (filePath, useFileNameAsKey = true) => {\n  const cleanPath = filePath.startsWith('./') ? filePath.slice(2) : filePath;\n\n  const prop = cleanPath\n    .replace(/(\\.settings|\\.json|\\.js)/g, '')\n    .toLowerCase()\n    .split('/')\n    .map((p) => _.trimStart(p, '.'))\n    .join('.')\n    .split('.');\n\n  return useFileNameAsKey === true ? prop : prop.slice(0, -1);\n};\n"]}