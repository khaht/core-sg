{"version":3,"sources":["policy.util.js"],"names":["_","require","GLOBAL_PREFIX","PLUGIN_PREFIX","ADMIN_PREFIX","APPLICATION_PREFIX","isPolicyFactory","isArray","getPolicyIn","container","policy","get","toLower","policyExistsIn","isUndefined","stripPolicy","prefix","replace","createPolicy","policyName","args","resolveHandler","isFunction","handler","policyResolvers","name","is","startsWith","exists","policyWithoutPrefix","split","api","sgApp","plugin","parsePolicy","resolvePolicy","resolver","find","r","undefined","searchLocalPolicy","apiName","absoluteApiName","absoluteApi","globalPolicy","method","endpoint","controller","action","req","_res","next","route","verb","params","defaults","query","body","resolvedPolicy","localPolicy","Error","createPolicyFactory","factoryCallback","options","validator","validate","e","module","exports"],"mappings":"AAAA;AACA;AACA;AAEA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AAEA,MAAMC,aAAa,GAAG,UAAtB;AACA,MAAMC,aAAa,GAAG,WAAtB;AACA,MAAMC,YAAY,GAAG,SAArB;AACA,MAAMC,kBAAkB,GAAG,eAA3B;AAEA,MAAMC,eAAe,GAAGN,CAAC,CAACO,OAA1B;;AAEA,MAAMC,WAAW,GAAG,CAACC,SAAD,EAAYC,MAAZ,KAClBV,CAAC,CAACW,GAAF,CAAMF,SAAN,EAAiB,CAAC,QAAD,EAAW,UAAX,EAAuBT,CAAC,CAACY,OAAF,CAAUF,MAAV,CAAvB,CAAjB,CADF;;AAGA,MAAMG,cAAc,GAAG,CAACJ,SAAD,EAAYC,MAAZ,KACrB,CAACV,CAAC,CAACc,WAAF,CAAcN,WAAW,CAACC,SAAD,EAAYC,MAAZ,CAAzB,CADH;;AAGA,MAAMK,WAAW,GAAG,CAACL,MAAD,EAASM,MAAT,KAAoBN,MAAM,CAACO,OAAP,CAAeD,MAAf,EAAuB,EAAvB,CAAxC;;AAEA,MAAME,YAAY,GAAG,CAACC,UAAD,EAAa,GAAGC,IAAhB,MAA0B;AAAED,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAA1B,CAArB;;AAEA,MAAMC,cAAc,GAAIX,MAAD,IACrBV,CAAC,CAACsB,UAAF,CAAaZ,MAAb,IAAuBA,MAAvB,GAAgCA,MAAM,CAACa,OADzC;;AAGA,MAAMC,eAAe,GAAG,CACtB;AACEC,EAAAA,IAAI,EAAE,KADR;;AAEEC,EAAAA,EAAE,CAAChB,MAAD,EAAS;AACT,WAAOV,CAAC,CAAC2B,UAAF,CAAajB,MAAb,EAAqBL,kBAArB,CAAP;AACD,GAJH;;AAKEuB,EAAAA,MAAM,CAAClB,MAAD,EAAS;AACb,WAAO,KAAKgB,EAAL,CAAQhB,MAAR,KAAmB,CAACV,CAAC,CAACc,WAAF,CAAc,KAAKH,GAAL,CAASD,MAAT,CAAd,CAA3B;AACD,GAPH;;AAQEC,EAAAA,GAAG,EAAGD,MAAD,IAAY;AACf,UAAM,GAAGmB,mBAAH,IAA0BnB,MAAM,CAACoB,KAAP,CAAa,IAAb,CAAhC;AACA,UAAM,CAACC,GAAG,GAAG,EAAP,EAAWZ,UAAU,GAAG,EAAxB,IAA8BU,mBAAmB,CAACC,KAApB,CAA0B,GAA1B,CAApC;AACA,WAAOtB,WAAW,CAACR,CAAC,CAACW,GAAF,CAAMqB,KAAN,EAAa,CAAC,KAAD,EAAQD,GAAR,CAAb,CAAD,EAA6BZ,UAA7B,CAAlB;AACD;AAZH,CADsB,EAetB;AACEM,EAAAA,IAAI,EAAE,OADR;;AAEEC,EAAAA,EAAE,CAAChB,MAAD,EAAS;AACT,WAAOV,CAAC,CAAC2B,UAAF,CAAajB,MAAb,EAAqBN,YAArB,CAAP;AACD,GAJH;;AAKEwB,EAAAA,MAAM,CAAClB,MAAD,EAAS;AACb,WAAO,KAAKgB,EAAL,CAAQhB,MAAR,KAAmB,CAACV,CAAC,CAACc,WAAF,CAAc,KAAKH,GAAL,CAASD,MAAT,CAAd,CAA3B;AACD,GAPH;;AAQEC,EAAAA,GAAG,EAAGD,MAAD,IACHF,WAAW,CAACR,CAAC,CAACW,GAAF,CAAMqB,KAAN,EAAa,OAAb,CAAD,EAAwBjB,WAAW,CAACL,MAAD,EAASN,YAAT,CAAnC;AATf,CAfsB,EA0BtB;AACEqB,EAAAA,IAAI,EAAE,QADR;;AAEEC,EAAAA,EAAE,CAAChB,MAAD,EAAS;AACT,WAAOV,CAAC,CAAC2B,UAAF,CAAajB,MAAb,EAAqBP,aAArB,CAAP;AACD,GAJH;;AAKEyB,EAAAA,MAAM,CAAClB,MAAD,EAAS;AACb,WAAO,KAAKgB,EAAL,CAAQhB,MAAR,KAAmB,CAACV,CAAC,CAACc,WAAF,CAAc,KAAKH,GAAL,CAASD,MAAT,CAAd,CAA3B;AACD,GAPH;;AAQEC,EAAAA,GAAG,CAACD,MAAD,EAAS;AACV,UAAM,CAACuB,MAAM,GAAG,EAAV,EAAcd,UAAU,GAAG,EAA3B,IAAiCJ,WAAW,CAChDL,MADgD,EAEhDP,aAFgD,CAAX,CAGrC2B,KAHqC,CAG/B,GAH+B,CAAvC;AAIA,WAAOtB,WAAW,CAACR,CAAC,CAACW,GAAF,CAAMqB,KAAN,EAAa,CAAC,SAAD,EAAYC,MAAZ,CAAb,CAAD,EAAoCd,UAApC,CAAlB;AACD;;AAdH,CA1BsB,EA0CtB;AACEM,EAAAA,IAAI,EAAE,QADR;;AAEEC,EAAAA,EAAE,CAAChB,MAAD,EAAS;AACT,WAAOV,CAAC,CAAC2B,UAAF,CAAajB,MAAb,EAAqBR,aAArB,CAAP;AACD,GAJH;;AAKE0B,EAAAA,MAAM,CAAClB,MAAD,EAAS;AACb,WAAO,KAAKgB,EAAL,CAAQhB,MAAR,KAAmB,CAACV,CAAC,CAACc,WAAF,CAAc,KAAKH,GAAL,CAASD,MAAT,CAAd,CAA3B;AACD,GAPH;;AAQEC,EAAAA,GAAG,CAACD,MAAD,EAAS;AACV,WAAOF,WAAW,CAACwB,KAAD,EAAQjB,WAAW,CAACL,MAAD,EAASR,aAAT,CAAnB,CAAlB;AACD;;AAVH,CA1CsB,CAAxB,C,CAwDA;;AACA,MAAMgC,WAAW,GAAIxB,MAAD,IAClBJ,eAAe,CAACI,MAAD,CAAf,GAA0BQ,YAAY,CAAC,GAAGR,MAAJ,CAAtC,GAAoDQ,YAAY,CAACR,MAAD,CADlE;;AAGA,MAAMyB,aAAa,GAAIhB,UAAD,IAAgB;AACpC,QAAMiB,QAAQ,GAAGZ,eAAe,CAACa,IAAhB,CAAsBC,CAAD,IAAOA,CAAC,CAACV,MAAF,CAAST,UAAT,CAA5B,CAAjB;AAEA,SAAOiB,QAAQ,GAAGf,cAAc,CAACe,QAAQ,CAACzB,GAAV,CAAd,CAA6BQ,UAA7B,CAAH,GAA8CoB,SAA7D;AACD,CAJD;;AAMA,MAAMC,iBAAiB,GAAG,CAAC9B,MAAD,EAAS+B,OAAT,KAAqB;AAC7C,QAAM,CAACC,eAAD,EAAkBvB,UAAlB,IAAgCT,MAAM,CAACoB,KAAP,CAAa,GAAb,CAAtC;;AACA,QAAMa,WAAW,GAAG3C,CAAC,CAACW,GAAF,CAAMqB,KAAK,CAACD,GAAZ,EAAiBW,eAAjB,CAApB;;AAEA,MAAI7B,cAAc,CAAC8B,WAAD,EAAcxB,UAAd,CAAlB,EAA6C;AAC3C,WAAOE,cAAc,CAACb,WAAW,CAACmC,WAAD,EAAcxB,UAAd,CAAZ,CAArB;AACD;;AAED,QAAMY,GAAG,GAAG/B,CAAC,CAACW,GAAF,CAAMqB,KAAK,CAACD,GAAZ,EAAiBU,OAAjB,CAAZ;;AACA,MAAIV,GAAG,IAAIlB,cAAc,CAACkB,GAAD,EAAMrB,MAAN,CAAzB,EAAwC;AACtC,WAAOW,cAAc,CAACb,WAAW,CAACuB,GAAD,EAAMrB,MAAN,CAAZ,CAArB;AACD;;AAED,SAAO6B,SAAP;AACD,CAdD;;AAgBA,MAAMK,YAAY,GAAG,CAAC;AACpBC,EAAAA,MADoB;AAEpBC,EAAAA,QAFoB;AAGpBC,EAAAA,UAHoB;AAIpBC,EAAAA,MAJoB;AAKpBf,EAAAA;AALoB,CAAD,KAMf,OAAOgB,GAAP,EAAYC,IAAZ,EAAkBC,IAAlB,KAA2B;AAC/BF,EAAAA,GAAG,CAACG,KAAJ,GAAY;AACVN,IAAAA,QAAQ,EAAG,GAAED,MAAO,IAAGC,QAAS,EADtB;AAEVC,IAAAA,UAAU,EAAE/C,CAAC,CAACY,OAAF,CAAUmC,UAAV,CAFF;AAGVC,IAAAA,MAAM,EAAEhD,CAAC,CAACY,OAAF,CAAUoC,MAAV,CAHE;AAIVK,IAAAA,IAAI,EAAErD,CAAC,CAACY,OAAF,CAAUiC,MAAV,CAJI;AAKVZ,IAAAA;AALU,GAAZ;AAQAgB,EAAAA,GAAG,CAACK,MAAJ,GAAatD,CAAC,CAACuD,QAAF,CAAW,EAAX,EAAeN,GAAG,CAACO,KAAnB,EAA0BP,GAAG,CAACK,MAA9B,EAAsCL,GAAG,CAACQ,IAA1C,CAAb;AAEA,QAAMN,IAAI,EAAV;AACD,CAlBD;;AAoBA,MAAMxC,GAAG,GAAG,CAACD,MAAD,EAAS+B,OAAT,KAAqB;AAC/B,QAAM;AAAEtB,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAAuBc,WAAW,CAACxB,MAAD,CAAxC;AAEA,QAAMgD,cAAc,GAAGvB,aAAa,CAAChB,UAAD,CAApC;;AAEA,MAAIuC,cAAc,KAAKnB,SAAvB,EAAkC;AAChC,WAAOjC,eAAe,CAACI,MAAD,CAAf,GAA0BgD,cAAc,CAAC,GAAGtC,IAAJ,CAAxC,GAAoDsC,cAA3D;AACD;;AAED,QAAMC,WAAW,GAAGnB,iBAAiB,CAAC9B,MAAD,EAAS+B,OAAT,CAArC;;AAEA,MAAIkB,WAAW,KAAKpB,SAApB,EAA+B;AAC7B,WAAOoB,WAAP;AACD;;AAED,QAAM,IAAIC,KAAJ,CAAW,0BAAyBlD,MAAO,GAA3C,CAAN;AACD,CAhBD;;AAkBA,MAAMmD,mBAAmB,GAAG,CAACC,eAAD,EAAkBC,OAAlB,KAA8B;AACxD,QAAM;AAAEC,IAAAA,SAAF;AAAavC,IAAAA,IAAI,GAAG;AAApB,MAAkCsC,OAAxC;;AAEA,QAAME,QAAQ,GAAG,CAAC,GAAG7C,IAAJ,KAAa;AAC5B,QAAI;AACF4C,MAAAA,SAAS,CAAC,GAAG5C,IAAJ,CAAT;AACD,KAFD,CAEE,OAAO8C,CAAP,EAAU;AACV,YAAM,IAAIN,KAAJ,CAAW,iCAAgCnC,IAAK,WAAhD,CAAN;AACD;AACF,GAND;;AAQA,SAAO,CAAC,GAAGL,IAAJ,KAAa;AAClB,QAAI4C,SAAJ,EAAe;AACbC,MAAAA,QAAQ,CAAC,GAAG7C,IAAJ,CAAR;AACD;;AAED,WAAO0C,eAAe,CAAC,GAAG1C,IAAJ,CAAtB;AACD,GAND;AAOD,CAlBD;;AAoBA+C,MAAM,CAACC,OAAP,GAAiB;AACfzD,EAAAA,GADe;AAEfiC,EAAAA,YAFe;AAGfiB,EAAAA;AAHe,CAAjB","sourcesContent":["/**\n * Policies util\n */\n\nconst _ = require('lodash');\n\nconst GLOBAL_PREFIX = 'global::';\nconst PLUGIN_PREFIX = 'plugins::';\nconst ADMIN_PREFIX = 'admin::';\nconst APPLICATION_PREFIX = 'application::';\n\nconst isPolicyFactory = _.isArray;\n\nconst getPolicyIn = (container, policy) =>\n  _.get(container, ['config', 'policies', _.toLower(policy)]);\n\nconst policyExistsIn = (container, policy) =>\n  !_.isUndefined(getPolicyIn(container, policy));\n\nconst stripPolicy = (policy, prefix) => policy.replace(prefix, '');\n\nconst createPolicy = (policyName, ...args) => ({ policyName, args });\n\nconst resolveHandler = (policy) =>\n  _.isFunction(policy) ? policy : policy.handler;\n\nconst policyResolvers = [\n  {\n    name: 'api',\n    is(policy) {\n      return _.startsWith(policy, APPLICATION_PREFIX);\n    },\n    exists(policy) {\n      return this.is(policy) && !_.isUndefined(this.get(policy));\n    },\n    get: (policy) => {\n      const [, policyWithoutPrefix] = policy.split('::');\n      const [api = '', policyName = ''] = policyWithoutPrefix.split('.');\n      return getPolicyIn(_.get(sgApp, ['api', api]), policyName);\n    },\n  },\n  {\n    name: 'admin',\n    is(policy) {\n      return _.startsWith(policy, ADMIN_PREFIX);\n    },\n    exists(policy) {\n      return this.is(policy) && !_.isUndefined(this.get(policy));\n    },\n    get: (policy) =>\n      getPolicyIn(_.get(sgApp, 'admin'), stripPolicy(policy, ADMIN_PREFIX)),\n  },\n  {\n    name: 'plugin',\n    is(policy) {\n      return _.startsWith(policy, PLUGIN_PREFIX);\n    },\n    exists(policy) {\n      return this.is(policy) && !_.isUndefined(this.get(policy));\n    },\n    get(policy) {\n      const [plugin = '', policyName = ''] = stripPolicy(\n        policy,\n        PLUGIN_PREFIX\n      ).split('.');\n      return getPolicyIn(_.get(sgApp, ['plugins', plugin]), policyName);\n    },\n  },\n  {\n    name: 'global',\n    is(policy) {\n      return _.startsWith(policy, GLOBAL_PREFIX);\n    },\n    exists(policy) {\n      return this.is(policy) && !_.isUndefined(this.get(policy));\n    },\n    get(policy) {\n      return getPolicyIn(sgApp, stripPolicy(policy, GLOBAL_PREFIX));\n    },\n  },\n];\n\n// eslint-disable-next-line max-len\nconst parsePolicy = (policy) =>\n  isPolicyFactory(policy) ? createPolicy(...policy) : createPolicy(policy);\n\nconst resolvePolicy = (policyName) => {\n  const resolver = policyResolvers.find((r) => r.exists(policyName));\n\n  return resolver ? resolveHandler(resolver.get)(policyName) : undefined;\n};\n\nconst searchLocalPolicy = (policy, apiName) => {\n  const [absoluteApiName, policyName] = policy.split('.');\n  const absoluteApi = _.get(sgApp.api, absoluteApiName);\n\n  if (policyExistsIn(absoluteApi, policyName)) {\n    return resolveHandler(getPolicyIn(absoluteApi, policyName));\n  }\n\n  const api = _.get(sgApp.api, apiName);\n  if (api && policyExistsIn(api, policy)) {\n    return resolveHandler(getPolicyIn(api, policy));\n  }\n\n  return undefined;\n};\n\nconst globalPolicy = ({\n  method,\n  endpoint,\n  controller,\n  action,\n  plugin,\n}) => async (req, _res, next) => {\n  req.route = {\n    endpoint: `${method} ${endpoint}`,\n    controller: _.toLower(controller),\n    action: _.toLower(action),\n    verb: _.toLower(method),\n    plugin,\n  };\n\n  req.params = _.defaults({}, req.query, req.params, req.body);\n\n  await next();\n};\n\nconst get = (policy, apiName) => {\n  const { policyName, args } = parsePolicy(policy);\n\n  const resolvedPolicy = resolvePolicy(policyName);\n\n  if (resolvedPolicy !== undefined) {\n    return isPolicyFactory(policy) ? resolvedPolicy(...args) : resolvedPolicy;\n  }\n\n  const localPolicy = searchLocalPolicy(policy, apiName);\n\n  if (localPolicy !== undefined) {\n    return localPolicy;\n  }\n\n  throw new Error(`Could not find policy \"${policy}\"`);\n};\n\nconst createPolicyFactory = (factoryCallback, options) => {\n  const { validator, name = 'unnamed' } = options;\n\n  const validate = (...args) => {\n    try {\n      validator(...args);\n    } catch (e) {\n      throw new Error(`Invalid objects submitted to \"${name}\" policy.`);\n    }\n  };\n\n  return (...args) => {\n    if (validator) {\n      validate(...args);\n    }\n\n    return factoryCallback(...args);\n  };\n};\n\nmodule.exports = {\n  get,\n  globalPolicy,\n  createPolicyFactory,\n};\n"]}