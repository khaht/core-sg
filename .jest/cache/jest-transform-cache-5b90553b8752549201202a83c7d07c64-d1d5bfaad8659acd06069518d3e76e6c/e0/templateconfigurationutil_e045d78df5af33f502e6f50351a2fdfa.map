{"version":3,"sources":["template-configuration.util.js"],"names":["isString","isPlainObject","require","regex","excludeConfigPaths","templateConfiguration","obj","configPath","Object","keys","reduce","acc","key","includes","substr","match","eval","module","exports"],"mappings":"AAAA,MAAM;AAAEA,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,IAA8BC,OAAO,CAAC,QAAD,CAA3C;;AAEA,MAAMC,KAAK,GAAG,eAAd;AACA,MAAMC,kBAAkB,GAAG,CAAC,cAAD,CAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,qBAAqB,GAAG,CAACC,GAAD,EAAMC,UAAU,GAAG,EAAnB,KAA0BC,MAAM,CAC3DC,IADqD,CAChDH,GADgD,EAErDI,MAFqD,CAE9C,CAACC,GAAD,EAAMC,GAAN,KAAc;AACpB,MAAIX,aAAa,CAACK,GAAG,CAACM,GAAD,CAAJ,CAAb,IAA2B,CAACZ,QAAQ,CAACM,GAAG,CAACM,GAAD,CAAJ,CAAxC,EAAoD;AAClDD,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWP,qBAAqB,CAACC,GAAG,CAACM,GAAD,CAAJ,EAAY,GAAEL,UAAW,IAAGK,GAAI,EAAhC,CAAhC;AACD,GAFD,MAEO,IACLZ,QAAQ,CAACM,GAAG,CAACM,GAAD,CAAJ,CAAR,IACG,CAACR,kBAAkB,CAACS,QAAnB,CAA4BN,UAAU,CAACO,MAAX,CAAkB,CAAlB,CAA5B,CADJ,IAEGR,GAAG,CAACM,GAAD,CAAH,CAASG,KAAT,CAAeZ,KAAf,MAA0B,IAHxB,EAIL;AACA;AACAQ,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWI,IAAI,CAAC,MAAMV,GAAG,CAACM,GAAD,CAAT,GAAiB,GAAlB,CAAf;AACD,GAPM,MAOA;AACLD,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWN,GAAG,CAACM,GAAD,CAAd;AACD;;AAED,SAAOD,GAAP;AACD,CAjBqD,EAiBnD,EAjBmD,CAAxD;;AAkBAM,MAAM,CAACC,OAAP,GAAiBb,qBAAjB","sourcesContent":["const { isString, isPlainObject } = require('lodash');\n\nconst regex = /\\$\\{[^()]*\\}/g;\nconst excludeConfigPaths = ['info.scripts'];\n\n/**\n * Allow dynamic config values through the native ES6 template string function.\n */\n// Allow values which looks like such as an ES6 literal string\n// without parenthesis inside (aka function call).\n// Exclude config with conflicting syntax (e.g. npm scripts).\nconst templateConfiguration = (obj, configPath = '') => Object\n  .keys(obj)\n  .reduce((acc, key) => {\n    if (isPlainObject(obj[key]) && !isString(obj[key])) {\n      acc[key] = templateConfiguration(obj[key], `${configPath}.${key}`);\n    } else if (\n      isString(obj[key])\n      && !excludeConfigPaths.includes(configPath.substr(1))\n      && obj[key].match(regex) !== null\n    ) {\n      // eslint-disable-next-line\n      acc[key] = eval('`' + obj[key] + '`');\n    } else {\n      acc[key] = obj[key];\n    }\n\n    return acc;\n  }, {});\nmodule.exports = templateConfiguration;\n"]}