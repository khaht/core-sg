a37288bedf3ea45b66cec79e82a130ec
const path = require('path');

const fs = require('fs');

const env = require('@ltv/env');

const templateConfiguration = require('../utils/template-configuration.util');

const loadJsFile = file => {
  try {
    const jsModule = require(file); // call if function


    if (typeof jsModule === 'function') {
      return jsModule({
        env
      });
    }

    return jsModule;
  } catch (error) {
    throw new Error(`Could not load js config file ${file}: ${error.message}`);
  }
};

const loadJSONFile = file => {
  try {
    return templateConfiguration(JSON.parse(fs.readFileSync(file)));
  } catch (error) {
    throw new Error(`Could not load json config file ${file}: ${error.message}`);
  }
};

const loadFile = file => {
  const ext = path.extname(file);
  const loadFileEx = {
    '.js': loadJsFile,
    '.json': loadJSONFile
  };

  if (!loadFileEx[ext]) {
    return {};
  }

  return loadFileEx[ext](file);
};

module.exports = dir => {
  if (!fs.existsSync(dir)) return {};
  return fs.readdirSync(dir, {
    withFileTypes: true
  }).filter(file => file.isFile()).reduce((acc, file) => {
    const key = path.basename(file.name, path.extname(file.name));
    acc[key] = loadFile(path.resolve(dir, file.name));
    return acc;
  }, {});
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy1sb2FkZXIuanMiXSwibmFtZXMiOlsicGF0aCIsInJlcXVpcmUiLCJmcyIsImVudiIsInRlbXBsYXRlQ29uZmlndXJhdGlvbiIsImxvYWRKc0ZpbGUiLCJmaWxlIiwianNNb2R1bGUiLCJlcnJvciIsIkVycm9yIiwibWVzc2FnZSIsImxvYWRKU09ORmlsZSIsIkpTT04iLCJwYXJzZSIsInJlYWRGaWxlU3luYyIsImxvYWRGaWxlIiwiZXh0IiwiZXh0bmFtZSIsImxvYWRGaWxlRXgiLCJtb2R1bGUiLCJleHBvcnRzIiwiZGlyIiwiZXhpc3RzU3luYyIsInJlYWRkaXJTeW5jIiwid2l0aEZpbGVUeXBlcyIsImZpbHRlciIsImlzRmlsZSIsInJlZHVjZSIsImFjYyIsImtleSIsImJhc2VuYW1lIiwibmFtZSIsInJlc29sdmUiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsTUFBTUMsRUFBRSxHQUFHRCxPQUFPLENBQUMsSUFBRCxDQUFsQjs7QUFDQSxNQUFNRSxHQUFHLEdBQUdGLE9BQU8sQ0FBQyxVQUFELENBQW5COztBQUNBLE1BQU1HLHFCQUFxQixHQUFHSCxPQUFPLENBQUMsc0NBQUQsQ0FBckM7O0FBRUEsTUFBTUksVUFBVSxHQUFJQyxJQUFELElBQVU7QUFDM0IsTUFBSTtBQUNGLFVBQU1DLFFBQVEsR0FBR04sT0FBTyxDQUFDSyxJQUFELENBQXhCLENBREUsQ0FHRjs7O0FBQ0EsUUFBSSxPQUFPQyxRQUFQLEtBQW9CLFVBQXhCLEVBQW9DO0FBQ2xDLGFBQU9BLFFBQVEsQ0FBQztBQUFFSixRQUFBQTtBQUFGLE9BQUQsQ0FBZjtBQUNEOztBQUVELFdBQU9JLFFBQVA7QUFDRCxHQVRELENBU0UsT0FBT0MsS0FBUCxFQUFjO0FBQ2QsVUFBTSxJQUFJQyxLQUFKLENBQVcsaUNBQWdDSCxJQUFLLEtBQUlFLEtBQUssQ0FBQ0UsT0FBUSxFQUFsRSxDQUFOO0FBQ0Q7QUFDRixDQWJEOztBQWVBLE1BQU1DLFlBQVksR0FBSUwsSUFBRCxJQUFVO0FBQzdCLE1BQUk7QUFDRixXQUFPRixxQkFBcUIsQ0FBQ1EsSUFBSSxDQUFDQyxLQUFMLENBQVdYLEVBQUUsQ0FBQ1ksWUFBSCxDQUFnQlIsSUFBaEIsQ0FBWCxDQUFELENBQTVCO0FBQ0QsR0FGRCxDQUVFLE9BQU9FLEtBQVAsRUFBYztBQUNkLFVBQU0sSUFBSUMsS0FBSixDQUFXLG1DQUFrQ0gsSUFBSyxLQUFJRSxLQUFLLENBQUNFLE9BQVEsRUFBcEUsQ0FBTjtBQUNEO0FBQ0YsQ0FORDs7QUFRQSxNQUFNSyxRQUFRLEdBQUlULElBQUQsSUFBVTtBQUN6QixRQUFNVSxHQUFHLEdBQUdoQixJQUFJLENBQUNpQixPQUFMLENBQWFYLElBQWIsQ0FBWjtBQUVBLFFBQU1ZLFVBQVUsR0FBRztBQUNqQixXQUFPYixVQURVO0FBRWpCLGFBQVNNO0FBRlEsR0FBbkI7O0FBS0EsTUFBSSxDQUFDTyxVQUFVLENBQUNGLEdBQUQsQ0FBZixFQUFzQjtBQUNwQixXQUFPLEVBQVA7QUFDRDs7QUFFRCxTQUFPRSxVQUFVLENBQUNGLEdBQUQsQ0FBVixDQUFnQlYsSUFBaEIsQ0FBUDtBQUNELENBYkQ7O0FBZUFhLE1BQU0sQ0FBQ0MsT0FBUCxHQUFrQkMsR0FBRCxJQUFTO0FBQ3hCLE1BQUksQ0FBQ25CLEVBQUUsQ0FBQ29CLFVBQUgsQ0FBY0QsR0FBZCxDQUFMLEVBQXlCLE9BQU8sRUFBUDtBQUV6QixTQUFPbkIsRUFBRSxDQUNOcUIsV0FESSxDQUNRRixHQURSLEVBQ2E7QUFBRUcsSUFBQUEsYUFBYSxFQUFFO0FBQWpCLEdBRGIsRUFFSkMsTUFGSSxDQUVJbkIsSUFBRCxJQUFVQSxJQUFJLENBQUNvQixNQUFMLEVBRmIsRUFHSkMsTUFISSxDQUdHLENBQUNDLEdBQUQsRUFBTXRCLElBQU4sS0FBZTtBQUNyQixVQUFNdUIsR0FBRyxHQUFHN0IsSUFBSSxDQUFDOEIsUUFBTCxDQUFjeEIsSUFBSSxDQUFDeUIsSUFBbkIsRUFBeUIvQixJQUFJLENBQUNpQixPQUFMLENBQWFYLElBQUksQ0FBQ3lCLElBQWxCLENBQXpCLENBQVo7QUFFQUgsSUFBQUEsR0FBRyxDQUFDQyxHQUFELENBQUgsR0FBV2QsUUFBUSxDQUFDZixJQUFJLENBQUNnQyxPQUFMLENBQWFYLEdBQWIsRUFBa0JmLElBQUksQ0FBQ3lCLElBQXZCLENBQUQsQ0FBbkI7QUFFQSxXQUFPSCxHQUFQO0FBQ0QsR0FUSSxFQVNGLEVBVEUsQ0FBUDtBQVVELENBYkQiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpO1xuY29uc3QgZW52ID0gcmVxdWlyZSgnQGx0di9lbnYnKTtcbmNvbnN0IHRlbXBsYXRlQ29uZmlndXJhdGlvbiA9IHJlcXVpcmUoJy4uL3V0aWxzL3RlbXBsYXRlLWNvbmZpZ3VyYXRpb24udXRpbCcpO1xuXG5jb25zdCBsb2FkSnNGaWxlID0gKGZpbGUpID0+IHtcbiAgdHJ5IHtcbiAgICBjb25zdCBqc01vZHVsZSA9IHJlcXVpcmUoZmlsZSk7XG5cbiAgICAvLyBjYWxsIGlmIGZ1bmN0aW9uXG4gICAgaWYgKHR5cGVvZiBqc01vZHVsZSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcmV0dXJuIGpzTW9kdWxlKHsgZW52IH0pO1xuICAgIH1cblxuICAgIHJldHVybiBqc01vZHVsZTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYENvdWxkIG5vdCBsb2FkIGpzIGNvbmZpZyBmaWxlICR7ZmlsZX06ICR7ZXJyb3IubWVzc2FnZX1gKTtcbiAgfVxufTtcblxuY29uc3QgbG9hZEpTT05GaWxlID0gKGZpbGUpID0+IHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gdGVtcGxhdGVDb25maWd1cmF0aW9uKEpTT04ucGFyc2UoZnMucmVhZEZpbGVTeW5jKGZpbGUpKSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBDb3VsZCBub3QgbG9hZCBqc29uIGNvbmZpZyBmaWxlICR7ZmlsZX06ICR7ZXJyb3IubWVzc2FnZX1gKTtcbiAgfVxufTtcblxuY29uc3QgbG9hZEZpbGUgPSAoZmlsZSkgPT4ge1xuICBjb25zdCBleHQgPSBwYXRoLmV4dG5hbWUoZmlsZSk7XG5cbiAgY29uc3QgbG9hZEZpbGVFeCA9IHtcbiAgICAnLmpzJzogbG9hZEpzRmlsZSxcbiAgICAnLmpzb24nOiBsb2FkSlNPTkZpbGUsXG4gIH07XG5cbiAgaWYgKCFsb2FkRmlsZUV4W2V4dF0pIHtcbiAgICByZXR1cm4ge307XG4gIH1cblxuICByZXR1cm4gbG9hZEZpbGVFeFtleHRdKGZpbGUpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSAoZGlyKSA9PiB7XG4gIGlmICghZnMuZXhpc3RzU3luYyhkaXIpKSByZXR1cm4ge307XG5cbiAgcmV0dXJuIGZzXG4gICAgLnJlYWRkaXJTeW5jKGRpciwgeyB3aXRoRmlsZVR5cGVzOiB0cnVlIH0pXG4gICAgLmZpbHRlcigoZmlsZSkgPT4gZmlsZS5pc0ZpbGUoKSlcbiAgICAucmVkdWNlKChhY2MsIGZpbGUpID0+IHtcbiAgICAgIGNvbnN0IGtleSA9IHBhdGguYmFzZW5hbWUoZmlsZS5uYW1lLCBwYXRoLmV4dG5hbWUoZmlsZS5uYW1lKSk7XG5cbiAgICAgIGFjY1trZXldID0gbG9hZEZpbGUocGF0aC5yZXNvbHZlKGRpciwgZmlsZS5uYW1lKSk7XG5cbiAgICAgIHJldHVybiBhY2M7XG4gICAgfSwge30pO1xufTtcbiJdfQ==