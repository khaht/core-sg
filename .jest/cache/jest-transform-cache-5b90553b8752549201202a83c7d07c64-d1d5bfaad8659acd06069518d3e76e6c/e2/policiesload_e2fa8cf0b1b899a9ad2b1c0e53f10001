1086093e9854de94801b9ac6d006f423
const assert = require('assert');

const path = require('path');

const _ = require('lodash');

const fse = require('fs-extra');

const loadPolicy = file => {
  try {
    const policy = require(file);

    assert(typeof policy === 'function', 'Policy must be a function.');
    return policy;
  } catch (error) {
    throw new Error(`Could not load policy ${file}: ${error.message}`);
  }
};

module.exports = dir => {
  if (!fse.existsSync(dir)) return {};
  const root = {};
  const paths = fse.readdirSync(dir, {
    withFileTypes: true
  }).filter(fd => fd.isFile());
  paths.forEach(fd => {
    const {
      name
    } = fd;
    const fullPath = dir + path.sep + name;
    const ext = path.extname(name);
    const key = path.basename(name, ext);
    root[_.toLower(key)] = loadPolicy(fullPath);
  });
  return root;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvbGljaWVzLmxvYWQuanMiXSwibmFtZXMiOlsiYXNzZXJ0IiwicmVxdWlyZSIsInBhdGgiLCJfIiwiZnNlIiwibG9hZFBvbGljeSIsImZpbGUiLCJwb2xpY3kiLCJlcnJvciIsIkVycm9yIiwibWVzc2FnZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJkaXIiLCJleGlzdHNTeW5jIiwicm9vdCIsInBhdGhzIiwicmVhZGRpclN5bmMiLCJ3aXRoRmlsZVR5cGVzIiwiZmlsdGVyIiwiZmQiLCJpc0ZpbGUiLCJmb3JFYWNoIiwibmFtZSIsImZ1bGxQYXRoIiwic2VwIiwiZXh0IiwiZXh0bmFtZSIsImtleSIsImJhc2VuYW1lIiwidG9Mb3dlciJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsTUFBTSxHQUFHQyxPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxNQUFNQyxJQUFJLEdBQUdELE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLE1BQU1FLENBQUMsR0FBR0YsT0FBTyxDQUFDLFFBQUQsQ0FBakI7O0FBQ0EsTUFBTUcsR0FBRyxHQUFHSCxPQUFPLENBQUMsVUFBRCxDQUFuQjs7QUFFQSxNQUFNSSxVQUFVLEdBQUlDLElBQUQsSUFBVTtBQUMzQixNQUFJO0FBQ0YsVUFBTUMsTUFBTSxHQUFHTixPQUFPLENBQUNLLElBQUQsQ0FBdEI7O0FBRUFOLElBQUFBLE1BQU0sQ0FBQyxPQUFPTyxNQUFQLEtBQWtCLFVBQW5CLEVBQStCLDRCQUEvQixDQUFOO0FBRUEsV0FBT0EsTUFBUDtBQUNELEdBTkQsQ0FNRSxPQUFPQyxLQUFQLEVBQWM7QUFDZCxVQUFNLElBQUlDLEtBQUosQ0FBVyx5QkFBd0JILElBQUssS0FBSUUsS0FBSyxDQUFDRSxPQUFRLEVBQTFELENBQU47QUFDRDtBQUNGLENBVkQ7O0FBWUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFrQkMsR0FBRCxJQUFTO0FBQ3hCLE1BQUksQ0FBQ1QsR0FBRyxDQUFDVSxVQUFKLENBQWVELEdBQWYsQ0FBTCxFQUEwQixPQUFPLEVBQVA7QUFFMUIsUUFBTUUsSUFBSSxHQUFHLEVBQWI7QUFDQSxRQUFNQyxLQUFLLEdBQUdaLEdBQUcsQ0FDZGEsV0FEVyxDQUNDSixHQURELEVBQ007QUFBRUssSUFBQUEsYUFBYSxFQUFFO0FBQWpCLEdBRE4sRUFFWEMsTUFGVyxDQUVIQyxFQUFELElBQVFBLEVBQUUsQ0FBQ0MsTUFBSCxFQUZKLENBQWQ7QUFJQUwsRUFBQUEsS0FBSyxDQUFDTSxPQUFOLENBQWVGLEVBQUQsSUFBUTtBQUNwQixVQUFNO0FBQUVHLE1BQUFBO0FBQUYsUUFBV0gsRUFBakI7QUFDQSxVQUFNSSxRQUFRLEdBQUdYLEdBQUcsR0FBR1gsSUFBSSxDQUFDdUIsR0FBWCxHQUFpQkYsSUFBbEM7QUFFQSxVQUFNRyxHQUFHLEdBQUd4QixJQUFJLENBQUN5QixPQUFMLENBQWFKLElBQWIsQ0FBWjtBQUNBLFVBQU1LLEdBQUcsR0FBRzFCLElBQUksQ0FBQzJCLFFBQUwsQ0FBY04sSUFBZCxFQUFvQkcsR0FBcEIsQ0FBWjtBQUNBWCxJQUFBQSxJQUFJLENBQUNaLENBQUMsQ0FBQzJCLE9BQUYsQ0FBVUYsR0FBVixDQUFELENBQUosR0FBdUJ2QixVQUFVLENBQUNtQixRQUFELENBQWpDO0FBQ0QsR0FQRDtBQVNBLFNBQU9ULElBQVA7QUFDRCxDQWxCRCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGFzc2VydCA9IHJlcXVpcmUoJ2Fzc2VydCcpO1xuY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IF8gPSByZXF1aXJlKCdsb2Rhc2gnKTtcbmNvbnN0IGZzZSA9IHJlcXVpcmUoJ2ZzLWV4dHJhJyk7XG5cbmNvbnN0IGxvYWRQb2xpY3kgPSAoZmlsZSkgPT4ge1xuICB0cnkge1xuICAgIGNvbnN0IHBvbGljeSA9IHJlcXVpcmUoZmlsZSk7XG5cbiAgICBhc3NlcnQodHlwZW9mIHBvbGljeSA9PT0gJ2Z1bmN0aW9uJywgJ1BvbGljeSBtdXN0IGJlIGEgZnVuY3Rpb24uJyk7XG5cbiAgICByZXR1cm4gcG9saWN5O1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIHRocm93IG5ldyBFcnJvcihgQ291bGQgbm90IGxvYWQgcG9saWN5ICR7ZmlsZX06ICR7ZXJyb3IubWVzc2FnZX1gKTtcbiAgfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSAoZGlyKSA9PiB7XG4gIGlmICghZnNlLmV4aXN0c1N5bmMoZGlyKSkgcmV0dXJuIHt9O1xuXG4gIGNvbnN0IHJvb3QgPSB7fTtcbiAgY29uc3QgcGF0aHMgPSBmc2VcbiAgICAucmVhZGRpclN5bmMoZGlyLCB7IHdpdGhGaWxlVHlwZXM6IHRydWUgfSlcbiAgICAuZmlsdGVyKChmZCkgPT4gZmQuaXNGaWxlKCkpO1xuXG4gIHBhdGhzLmZvckVhY2goKGZkKSA9PiB7XG4gICAgY29uc3QgeyBuYW1lIH0gPSBmZDtcbiAgICBjb25zdCBmdWxsUGF0aCA9IGRpciArIHBhdGguc2VwICsgbmFtZTtcblxuICAgIGNvbnN0IGV4dCA9IHBhdGguZXh0bmFtZShuYW1lKTtcbiAgICBjb25zdCBrZXkgPSBwYXRoLmJhc2VuYW1lKG5hbWUsIGV4dCk7XG4gICAgcm9vdFtfLnRvTG93ZXIoa2V5KV0gPSBsb2FkUG9saWN5KGZ1bGxQYXRoKTtcbiAgfSk7XG5cbiAgcmV0dXJuIHJvb3Q7XG59O1xuIl19