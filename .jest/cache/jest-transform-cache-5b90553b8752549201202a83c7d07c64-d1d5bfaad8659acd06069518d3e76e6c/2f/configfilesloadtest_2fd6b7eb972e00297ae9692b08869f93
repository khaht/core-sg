50e5baac833440b033eb9424c0ba7f05
const {
  join
} = require('path');

const loadConfig = require('../config-files.load');

describe('Load Config', () => {
  test('Should load api configs', async () => {
    const apiDir = join(process.cwd(), 'modules');
    const apiConfigs = await loadConfig(apiDir, '*/config/**/*.*(js|json)');
    Object.keys(apiConfigs).forEach(item => {
      expect(apiConfigs[item].hasOwnProperty('config')).toBeTruthy();
    });
  });
  test('Should load api configs with default pattern', async () => {
    const apiDir = join(process.cwd(), 'modules');
    const apiConfigs = await loadConfig(apiDir);
    Object.keys(apiConfigs).forEach(item => {
      expect(apiConfigs[item].hasOwnProperty('config')).toBeTruthy();
    });
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbmZpZy1maWxlcy5sb2FkLnRlc3QuanMiXSwibmFtZXMiOlsiam9pbiIsInJlcXVpcmUiLCJsb2FkQ29uZmlnIiwiZGVzY3JpYmUiLCJ0ZXN0IiwiYXBpRGlyIiwicHJvY2VzcyIsImN3ZCIsImFwaUNvbmZpZ3MiLCJPYmplY3QiLCJrZXlzIiwiZm9yRWFjaCIsIml0ZW0iLCJleHBlY3QiLCJoYXNPd25Qcm9wZXJ0eSIsInRvQmVUcnV0aHkiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07QUFBRUEsRUFBQUE7QUFBRixJQUFXQyxPQUFPLENBQUMsTUFBRCxDQUF4Qjs7QUFDQSxNQUFNQyxVQUFVLEdBQUdELE9BQU8sQ0FBQyxzQkFBRCxDQUExQjs7QUFFQUUsUUFBUSxDQUFDLGFBQUQsRUFBZ0IsTUFBTTtBQUM1QkMsRUFBQUEsSUFBSSxDQUFDLHlCQUFELEVBQTRCLFlBQVk7QUFDMUMsVUFBTUMsTUFBTSxHQUFHTCxJQUFJLENBQUNNLE9BQU8sQ0FBQ0MsR0FBUixFQUFELEVBQWdCLFNBQWhCLENBQW5CO0FBQ0EsVUFBTUMsVUFBVSxHQUFHLE1BQU1OLFVBQVUsQ0FBQ0csTUFBRCxFQUFTLDBCQUFULENBQW5DO0FBQ0FJLElBQUFBLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZRixVQUFaLEVBQXdCRyxPQUF4QixDQUFpQ0MsSUFBRCxJQUFVO0FBQ3hDQyxNQUFBQSxNQUFNLENBQUNMLFVBQVUsQ0FBQ0ksSUFBRCxDQUFWLENBQWlCRSxjQUFqQixDQUFnQyxRQUFoQyxDQUFELENBQU4sQ0FBa0RDLFVBQWxEO0FBQ0QsS0FGRDtBQUdELEdBTkcsQ0FBSjtBQVFBWCxFQUFBQSxJQUFJLENBQUMsOENBQUQsRUFBaUQsWUFBWTtBQUMvRCxVQUFNQyxNQUFNLEdBQUdMLElBQUksQ0FBQ00sT0FBTyxDQUFDQyxHQUFSLEVBQUQsRUFBZ0IsU0FBaEIsQ0FBbkI7QUFDQSxVQUFNQyxVQUFVLEdBQUcsTUFBTU4sVUFBVSxDQUFDRyxNQUFELENBQW5DO0FBQ0FJLElBQUFBLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZRixVQUFaLEVBQXdCRyxPQUF4QixDQUFpQ0MsSUFBRCxJQUFVO0FBQ3hDQyxNQUFBQSxNQUFNLENBQUNMLFVBQVUsQ0FBQ0ksSUFBRCxDQUFWLENBQWlCRSxjQUFqQixDQUFnQyxRQUFoQyxDQUFELENBQU4sQ0FBa0RDLFVBQWxEO0FBQ0QsS0FGRDtBQUdELEdBTkcsQ0FBSjtBQU9ELENBaEJPLENBQVIiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IGpvaW4gfSA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IGxvYWRDb25maWcgPSByZXF1aXJlKCcuLi9jb25maWctZmlsZXMubG9hZCcpO1xuXG5kZXNjcmliZSgnTG9hZCBDb25maWcnLCAoKSA9PiB7XG4gIHRlc3QoJ1Nob3VsZCBsb2FkIGFwaSBjb25maWdzJywgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IGFwaURpciA9IGpvaW4ocHJvY2Vzcy5jd2QoKSwgJ21vZHVsZXMnKTtcbiAgICBjb25zdCBhcGlDb25maWdzID0gYXdhaXQgbG9hZENvbmZpZyhhcGlEaXIsICcqL2NvbmZpZy8qKi8qLiooanN8anNvbiknKTtcbiAgICBPYmplY3Qua2V5cyhhcGlDb25maWdzKS5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgICBleHBlY3QoYXBpQ29uZmlnc1tpdGVtXS5oYXNPd25Qcm9wZXJ0eSgnY29uZmlnJykpLnRvQmVUcnV0aHkoKTtcbiAgICB9KTtcbiAgfSk7XG5cbiAgdGVzdCgnU2hvdWxkIGxvYWQgYXBpIGNvbmZpZ3Mgd2l0aCBkZWZhdWx0IHBhdHRlcm4nLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgYXBpRGlyID0gam9pbihwcm9jZXNzLmN3ZCgpLCAnbW9kdWxlcycpO1xuICAgIGNvbnN0IGFwaUNvbmZpZ3MgPSBhd2FpdCBsb2FkQ29uZmlnKGFwaURpcik7XG4gICAgT2JqZWN0LmtleXMoYXBpQ29uZmlncykuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgZXhwZWN0KGFwaUNvbmZpZ3NbaXRlbV0uaGFzT3duUHJvcGVydHkoJ2NvbmZpZycpKS50b0JlVHJ1dGh5KCk7XG4gICAgfSk7XG4gIH0pO1xufSk7XG4iXX0=