827dd596e62284e198a5bcd205a1ec68
const loadMiddleware = require('../middleware.load');

const logger = require('utils/logger.util');

describe('Load middleware', () => {
  const app = {
    log: logger,
    config: {
      installedMiddlewares: ['test'],
      appPath: process.cwd()
    },
    app: {
      use: jest.fn()
    }
  };
  test('Should load all middleware', async () => {
    const resp = await loadMiddleware(app);
    expect(Object.keys(resp)).toEqual(['bodyParser', 'boom', 'cors', 'gzip', 'router', 'auth', 'firebase-auth', 'http-logger', 'i18n']);
  });
  test('Should call load and initialize for bodyParser middleware', async () => {
    const {
      bodyParser = {}
    } = await loadMiddleware(app);
    const {
      load = {}
    } = bodyParser;
    const {
      initialize = undefined
    } = load;
    expect(initialize).toBeDefined();
    expect(typeof initialize).toBe('function');
    initialize();
    expect(app.app.use).toHaveBeenCalledTimes(2);
  });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1pZGRsZXdhcmUubG9hZC50ZXN0LmpzIl0sIm5hbWVzIjpbImxvYWRNaWRkbGV3YXJlIiwicmVxdWlyZSIsImxvZ2dlciIsImRlc2NyaWJlIiwiYXBwIiwibG9nIiwiY29uZmlnIiwiaW5zdGFsbGVkTWlkZGxld2FyZXMiLCJhcHBQYXRoIiwicHJvY2VzcyIsImN3ZCIsInVzZSIsImplc3QiLCJmbiIsInRlc3QiLCJyZXNwIiwiZXhwZWN0IiwiT2JqZWN0Iiwia2V5cyIsInRvRXF1YWwiLCJib2R5UGFyc2VyIiwibG9hZCIsImluaXRpYWxpemUiLCJ1bmRlZmluZWQiLCJ0b0JlRGVmaW5lZCIsInRvQmUiLCJ0b0hhdmVCZWVuQ2FsbGVkVGltZXMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLGNBQWMsR0FBR0MsT0FBTyxDQUFDLG9CQUFELENBQTlCOztBQUNBLE1BQU1DLE1BQU0sR0FBR0QsT0FBTyxDQUFDLG1CQUFELENBQXRCOztBQUVBRSxRQUFRLENBQUMsaUJBQUQsRUFBb0IsTUFBTTtBQUNoQyxRQUFNQyxHQUFHLEdBQUc7QUFDVkMsSUFBQUEsR0FBRyxFQUFFSCxNQURLO0FBRVZJLElBQUFBLE1BQU0sRUFBRTtBQUNOQyxNQUFBQSxvQkFBb0IsRUFBRSxDQUFDLE1BQUQsQ0FEaEI7QUFFTkMsTUFBQUEsT0FBTyxFQUFFQyxPQUFPLENBQUNDLEdBQVI7QUFGSCxLQUZFO0FBTVZOLElBQUFBLEdBQUcsRUFBRTtBQUNITyxNQUFBQSxHQUFHLEVBQUVDLElBQUksQ0FBQ0MsRUFBTDtBQURGO0FBTkssR0FBWjtBQVdBQyxFQUFBQSxJQUFJLENBQUMsNEJBQUQsRUFBK0IsWUFBWTtBQUM3QyxVQUFNQyxJQUFJLEdBQUcsTUFBTWYsY0FBYyxDQUFDSSxHQUFELENBQWpDO0FBQ0FZLElBQUFBLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDQyxJQUFQLENBQVlILElBQVosQ0FBRCxDQUFOLENBQTBCSSxPQUExQixDQUFrQyxDQUNoQyxZQURnQyxFQUVoQyxNQUZnQyxFQUdoQyxNQUhnQyxFQUloQyxNQUpnQyxFQUtoQyxRQUxnQyxFQU1oQyxNQU5nQyxFQU9oQyxlQVBnQyxFQVFoQyxhQVJnQyxFQVNoQyxNQVRnQyxDQUFsQztBQVdELEdBYkcsQ0FBSjtBQWVBTCxFQUFBQSxJQUFJLENBQUMsMkRBQUQsRUFBOEQsWUFBWTtBQUM1RSxVQUFNO0FBQUVNLE1BQUFBLFVBQVUsR0FBRztBQUFmLFFBQXNCLE1BQU1wQixjQUFjLENBQUNJLEdBQUQsQ0FBaEQ7QUFDQSxVQUFNO0FBQUVpQixNQUFBQSxJQUFJLEdBQUc7QUFBVCxRQUFnQkQsVUFBdEI7QUFDQSxVQUFNO0FBQUVFLE1BQUFBLFVBQVUsR0FBR0M7QUFBZixRQUE2QkYsSUFBbkM7QUFDQUwsSUFBQUEsTUFBTSxDQUFDTSxVQUFELENBQU4sQ0FBbUJFLFdBQW5CO0FBQ0FSLElBQUFBLE1BQU0sQ0FBQyxPQUFPTSxVQUFSLENBQU4sQ0FBMEJHLElBQTFCLENBQStCLFVBQS9CO0FBRUFILElBQUFBLFVBQVU7QUFDVk4sSUFBQUEsTUFBTSxDQUFDWixHQUFHLENBQUNBLEdBQUosQ0FBUU8sR0FBVCxDQUFOLENBQW9CZSxxQkFBcEIsQ0FBMEMsQ0FBMUM7QUFDRCxHQVRHLENBQUo7QUFVRCxDQXJDTyxDQUFSIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbG9hZE1pZGRsZXdhcmUgPSByZXF1aXJlKCcuLi9taWRkbGV3YXJlLmxvYWQnKTtcbmNvbnN0IGxvZ2dlciA9IHJlcXVpcmUoJ3V0aWxzL2xvZ2dlci51dGlsJyk7XG5cbmRlc2NyaWJlKCdMb2FkIG1pZGRsZXdhcmUnLCAoKSA9PiB7XG4gIGNvbnN0IGFwcCA9IHtcbiAgICBsb2c6IGxvZ2dlcixcbiAgICBjb25maWc6IHtcbiAgICAgIGluc3RhbGxlZE1pZGRsZXdhcmVzOiBbJ3Rlc3QnXSxcbiAgICAgIGFwcFBhdGg6IHByb2Nlc3MuY3dkKCksXG4gICAgfSxcbiAgICBhcHA6IHtcbiAgICAgIHVzZTogamVzdC5mbigpLFxuICAgIH1cbiAgfTtcblxuICB0ZXN0KCdTaG91bGQgbG9hZCBhbGwgbWlkZGxld2FyZScsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCByZXNwID0gYXdhaXQgbG9hZE1pZGRsZXdhcmUoYXBwKTtcbiAgICBleHBlY3QoT2JqZWN0LmtleXMocmVzcCkpLnRvRXF1YWwoW1xuICAgICAgJ2JvZHlQYXJzZXInLFxuICAgICAgJ2Jvb20nLFxuICAgICAgJ2NvcnMnLFxuICAgICAgJ2d6aXAnLFxuICAgICAgJ3JvdXRlcicsXG4gICAgICAnYXV0aCcsXG4gICAgICAnZmlyZWJhc2UtYXV0aCcsXG4gICAgICAnaHR0cC1sb2dnZXInLFxuICAgICAgJ2kxOG4nLFxuICAgIF0pO1xuICB9KTtcblxuICB0ZXN0KCdTaG91bGQgY2FsbCBsb2FkIGFuZCBpbml0aWFsaXplIGZvciBib2R5UGFyc2VyIG1pZGRsZXdhcmUnLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgeyBib2R5UGFyc2VyID0ge30gfSA9IGF3YWl0IGxvYWRNaWRkbGV3YXJlKGFwcCk7XG4gICAgY29uc3QgeyBsb2FkID0ge30gfSA9IGJvZHlQYXJzZXI7XG4gICAgY29uc3QgeyBpbml0aWFsaXplID0gdW5kZWZpbmVkIH0gPSBsb2FkO1xuICAgIGV4cGVjdChpbml0aWFsaXplKS50b0JlRGVmaW5lZCgpO1xuICAgIGV4cGVjdCh0eXBlb2YgaW5pdGlhbGl6ZSkudG9CZSgnZnVuY3Rpb24nKTtcblxuICAgIGluaXRpYWxpemUoKTtcbiAgICBleHBlY3QoYXBwLmFwcC51c2UpLnRvSGF2ZUJlZW5DYWxsZWRUaW1lcygyKTtcbiAgfSk7XG59KTtcbiJdfQ==